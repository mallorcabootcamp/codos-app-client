{"version":3,"sources":["components/CurrentCo2/CurrentCo2.tsx","components/IconWithValue/Icon.ts","components/IconWithValue/IconWithValue.tsx","components/TimeWithValuesGraph/TimeWithValuesGraph.tsx","components/Card/Card.tsx","config.ts","services/ApiService/ApiService.ts","services/ApiService/ApiServiceDataProp.ts","components/LateralBar/LateralBar.tsx","components/LateralMenuTransition/LateralMenuTransition.tsx","hooks/useStateWithLocalStorage.ts","utils/calculateTimeScaleValue.ts","components/Loading/Loading.tsx","screens/Main/Main.tsx","components/DatePicker/DatePicker.tsx","components/CardWithTextTab/CardWithTextTab.tsx","screens/History/History.tsx","img/unexpected-error.png","screens/UnexpectedError/UnexpectedError.tsx","components/ScrollToTop/ScrollToTop.tsx","App.js","serviceWorker.js","index.js"],"names":["maximumECoValue","CurrentCo2","eCoValue","backgroundColor","useMemo","getBackgroundColor","borderColor","getBorderColor","className","style","Icon","IconWithValue","value","icon","getIconFromIconName","size","iconName","faTint","faThermometerFull","axisColor","axisBottomTickLabelProps","dx","dy","textAnchor","fontFamily","fontSize","fill","axisLeftTickLabelProps","TimeWithValuesGraph","endTimeValue","width","historicalValues","uom","marginY","marginX","height","timeFormat","bottomAxisNumTicks","timeRank","startTime","endTime","stock","getDate","d","Date","parseInt","time","xMax","yMax","scaleGridColumns","scaleLinear","range","domain","scaleAxisLeft","Math","max","map","min","scaleAxisBottom","scaleTime","extent","dateScale","stockValueScale","reverse","AreaClosed","data","x","y","getStockValue","yScale","GridColumns","scale","top","numTicks","stroke","strokeWidth","AxisBottom","hideTicks","tickStroke","tickLabelProps","tickFormat","moment","format","AxisLeft","left","e","Card","children","classes","classnames","config","ApiService","endpoint","user","fromDate","toDate","timeScaleValue","dataValue","axios","method","url","params","aggregateTimeScale","dataToGet","then","response","selectedDevice","fromDateTs","round","valueOf","toDateTs","makeGetRequest","undefined","ApiServiceDataProp","LateralBar","onClickOnClose","onClickOnDevice","devices","activeDevice","onClick","faTimesCircle","device","key","LateralMenuTransition","isVisible","CSSTransition","in","timeout","classNames","unmountOnExit","useStateWithLocalStorage","localStorageKey","useState","localStorage","getItem","setValue","useEffect","setItem","calculateTimeScaleValue","timeRecivedDiference","threeDaysDiference","subtract","threeMonthsDiference","sevenMonthsDiference","Loading","color","faSpinner","Main","setSelectedDevice","menuActived","setMenuActived","currentCo2","setCurrentCo2","currentTemperature","setCurrentTemperature","currentHumidity","setCurrentHumidity","co2Data","setCo2Data","deviceList","setDeviceList","isError","setIsError","isLoading","setIsLoading","getUsersList","apiResponse","getCurrentData","co2","temperature","humidity","periodCo2","getPeriodData","Promise","all","currentCo2Response","currentTemperatureResponse","currentHumidityResponse","periodCo2Response","catch","to","faBars","faSearch","DatePicker","text","date","onDateChanged","idValue","shortid","generate","htmlFor","onChange","target","name","type","id","CardWithTextTab","History","setFromDate","setToDate","temperatureData","setTemperatureData","humidityData","setHumidityData","setTimeScaleValue","faChevronLeft","disabled","periodTemperature","periodHumidity","UnexpectedError","location","useLocation","redirectTo","parse","search","src","robotImg","alt","ScrollToTop","pathname","window","scrollTo","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"gcAIMA,G,MAAkB,MAKXC,EAAa,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAEnBC,EAAkBC,mBAAQ,WAC5B,OAAOC,EAAmBH,KAC3B,CAACA,IAEEI,EAAcF,mBAAQ,WACxB,OAAOG,EAAeL,KACvB,CAACA,IAEJ,OACI,yBAAKM,UAAU,6CACX,yBAAKA,UAAU,sDAAsDC,MAAO,CAAEN,gBAAiBG,IAC3F,yBAAKE,UAAU,6DAA6DC,MAAO,CAAEN,oBACjF,uBAAGK,UAAU,4CAAb,WACA,uBAAGA,UAAU,8BAA6B,8BAAON,GAAjD,YAOdG,EAAqB,SAACH,GAExB,MAAM,OAAN,OAAcA,GAAYF,EA9BJ,KA6BR,EAAIE,EAAWF,GA3BX,EA4BlB,cAGEO,EAAiB,SAACL,GAEpB,MAAM,OAAN,OAAcA,GAAYF,EAnCJ,KAkCR,EAAIE,EAAWF,GAhCX,EAiClB,cCtCSU,EACG,cADHA,EAEA,WCKAC,G,MAAgB,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,KAEnC,OAAO,uBAAGL,UAAU,aAAY,kBAAC,IAAD,CAAiBK,KAAMC,EAAoBD,GAAOE,KAAK,OAAhF,IAAwF,0BAAMP,UAAU,cAAcI,MAI3HE,EAAsB,SAACE,GACzB,OAAQA,GACJ,KAAKN,EAAe,OAAOO,IAC3B,KAAKP,EAAkB,OAAOQ,IAC9B,QAAS,OAAOD,M,yGCJlBE,G,OAAY,WAGZC,EAA2B,CAC/BC,GAAI,MACJC,GAAI,SACJC,WAAY,SACZC,WAAY,aACZC,SAAU,GACVC,KAAMP,GAEFQ,EAAyB,CAC7BN,GAAI,QACJG,WAAY,aACZC,SAAU,GACVF,WAAY,MACZG,KAAMP,GAgBKS,EAAsB,SAAC,GAAkI,IAAhIC,EAA+H,EAA/HA,aAAcC,EAAiH,EAAjHA,MAAOC,EAA0G,EAA1GA,iBAAkBC,EAAwF,EAAxFA,IAAKC,EAAmF,EAAnFA,QAASC,EAA0E,EAA1EA,QAASC,EAAiE,EAAjEA,OAAQC,EAAyD,EAAzDA,WAAYC,EAA6C,EAA7CA,mBAEhHC,EAAW,CACfC,UAAW,EACXC,QAASX,GAELY,EAAQV,EACRW,EAAU,SAACC,GAAD,OAAoB,IAAIC,KAAwB,IAAnBC,SAASF,EAAEG,QAElDC,EAAOjB,EAAQI,EACfc,EAAOb,EAASF,EAIhBgB,EAAmB7C,mBACvB,kBACE8C,YAAY,CACVC,MAAO,CAACjB,EAASa,EAAOb,GACxBkB,OAAQ,CAAC,EAAGd,EAASE,aAEzB,CAACO,EAAMb,EAASI,EAASE,UAErBa,EAAgBjD,mBACpB,kBACE8C,YAAY,CACVE,OAAQ,CACNE,KAAKC,IAAL,MAAAD,KAAI,YAAQb,EAAMe,KAAI,SAACb,GAAD,OAAoBA,EAAE/B,WAC5C0C,KAAKG,IAAL,MAAAH,KAAI,YAAQb,EAAMe,KAAI,SAACb,GAAD,OAAoBA,EAAE/B,YAE9CuC,MAAO,CAAC,EAAGH,EAAOf,OAEtB,CAACe,EAAMf,EAASQ,IAGZiB,EAAkBtD,mBACtB,kBACEuD,YAAU,CACRR,MAAO,CAACjB,EAASa,EAAOb,GACxBkB,OAAQQ,YAAOnB,EAAOC,OAE1B,CAACK,EAAMb,EAASO,IAGZoB,EAAYzD,mBAChB,kBACEuD,YAAU,CACRR,MAAO,CAACjB,EAASa,EAAOb,GACxBkB,OAAQQ,YAAOnB,EAAOC,OAE1B,CAACK,EAAMb,EAASO,IAEZqB,EAAkB1D,mBACtB,kBACE8C,YAAY,CACVC,MAAO,CAAClB,EAASe,GACjBI,OAAQ,CACNE,KAAKG,IAAL,MAAAH,KAAI,YAAQb,EAAMe,KAAI,SAACb,GAAD,OAAoBW,KAAKG,IAAId,EAAE/B,YACrD0C,KAAKC,IAAL,MAAAD,KAAI,YAAQb,EAAMe,KAAI,SAACb,GAAD,OAAoBW,KAAKC,IAAIZ,EAAE/B,aAEvDmD,SAAS,MAEb,CAACf,EAAMf,EAASQ,IAGlB,OACE,yBAAKjC,UAAU,yCACb,yBAAKsB,MAAOA,EAAQG,EAASE,OAAQA,GACnC,kBAAC6B,EAAA,EAAD,CACEC,KAAMxB,EACNyB,EAAG,SAACvB,GAAD,uBAAoBkB,EAAUnB,EAAQC,WAAtC,QAA6C,GAChDwB,EAAG,SAACxB,GAAD,uBAAoBmB,EA9DT,SAACnB,GAAD,OAAoBA,EAAE/B,MA8DGwD,CAAczB,WAAlD,QAAyD,GAC5D0B,OAAQP,EACRpC,KAzGS,YA2GX,kBAAC4C,EAAA,EAAD,CACEC,MAAOtB,EACPd,OAAQa,EAAOf,EACfuC,IAAKvC,EACLwC,SAAUnC,EAASE,QACnBkC,OAAQvD,EACRwD,YAAa,MAGf,kBAACC,EAAA,EAAD,CACEJ,IAAKxB,EACLuB,MAAOb,EACPe,SAAUpC,EACVqC,OAAQvD,EACR0D,WAAW,EACXC,WAAY3D,EACZ4D,eAAgB,kBAAM3D,GACtB4D,WAAY,SAACpE,GACX,OAAOqE,IAAOrE,GAAesE,OAAO9C,MAIxC,kBAAC+C,EAAA,EAAD,CACEX,IAAKvC,EACLmD,KAAMlD,EACNqC,MAAOlB,EACPoB,SAAU,EACVI,WAAW,EACXH,OAAQvD,EACR2D,WAAY3D,EACZ4D,eAAgB,kBAAMpD,GACtBqD,WAAY,SAACK,GAAD,gBAAUA,EAAV,YAAerD,S,gBC7IxBsD,G,OAAO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAU/E,EAAuB,EAAvBA,UACvBgF,EAAUC,IAAW,YAAajF,GACxC,OACI,yBAAKA,UAAWgF,GACXD,K,mECbAG,EACF,8BCKEC,EAAb,qJAEgCC,EAAkBC,EAAeC,EAAmBC,EAAiBC,EAAyBC,GAF9H,0FAGeC,IAAM,CACTC,OAAQ,MACRC,IAAKV,EAAgBE,EAErBS,OAAQ,CACJP,SAAUA,EACVC,OAAQA,EACRF,KAAMA,EACNS,mBAAoBN,EACpBO,UAAWN,KAEhBO,MAAK,SAACC,GACL,OAAOA,EAASxC,SAf5B,yLAmB+B6B,EAAkBC,EAAgBW,EAAwBV,EAAwBC,GAnBjH,gFAoBcU,EAAarD,KAAKsD,MAAM3B,IAAOa,GAAUe,UAAU,KACnDC,EAAWxD,KAAKsD,MAAM3B,IAAOc,GAAQc,UAAU,KArB7D,kBAsBelB,EAAWoB,eAAe,cAAeL,EAAgBC,EAAYG,EAAUd,EAAgBC,IAtB9G,kRA0BeN,EAAWoB,eAAe,UA1BzC,+KA8BgCL,EAAwBT,GA9BxD,0FA+BeN,EAAWoB,eAAe,eAAgBL,OAAgBM,OAAWA,OAAWA,EAAWf,IA/B1G,2GAAaN,EACFE,U,aCPCoB,ECYCC,EAAa,SAAC,GAAoF,IAAlFC,EAAiF,EAAjFA,eAAgBC,EAAiE,EAAjEA,gBAAiBC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,aAEnE,OACI,yBAAK9G,UAAU,aACX,yBAAKA,UAAU,kFACX,uBAAGA,UAAU,kCAAb,aACA,yBAAKA,UAAU,6BAA6B+G,QAASJ,GACjD,kBAAC,IAAD,CAAiBtG,KAAM2G,IAAezG,KAAK,SAInD,yBAAKP,UAAU,0CACX,uBAAGA,UAAU,4BAAb,2BACA,wBAAIA,UAAU,iBACT6G,EAAQ7D,KAAI,SAAAiE,GAAM,OACf,wBAAIC,IAAKD,EACDjH,UAAS,6BAAwBiH,IAAWH,GAAgB,sBAAnD,gBACTC,QAAS,kBAAMH,EAAgBK,KAC9BA,QAMrB,wBAAIjH,UAAU,oCAEd,yBAAKA,UAAU,wCACX,uC,SC9BHmH,G,OAAwB,SAAC,GAAoC,IAAlCpC,EAAiC,EAAjCA,SAAUqC,EAAuB,EAAvBA,UAC9C,OACI,oCACI,kBAACC,EAAA,EAAD,CACIC,GAAIF,EACJG,QAAS,IACTC,WAAW,UACXC,eAAa,GAEZ1C,MChBJ2C,EAA2B,SAACC,GAAgE,IAAD,EAC1EC,mBACtBC,aAAaC,QAAQH,IAAoB,IAFuD,mBAC7FvH,EAD6F,KACtF2H,EADsF,KASpG,OAJAC,qBAAU,WACNH,aAAaI,QAAQN,EAAiBvH,KACvC,CAACA,EAAOuH,IAEJ,CAACvH,EAAO2H,ICRNG,EAA0B,SAAC5C,EAAkBC,GACtD,IAAM4C,EAAuBrF,KAAKsD,MAAM3B,IAAOc,GAAQc,UAAU,KAAQvD,KAAKsD,MAAM3B,IAAOa,GAAUe,UAAU,KACzG+B,EAAqB3D,MAAS4B,UAAU,IAAO5B,MAAS4D,SAAS,EAAG,QAAQhC,UAAU,IACtFiC,EAAuB7D,MAAS4B,UAAU,IAAO5B,MAAS4D,SAAS,EAAG,UAAUhC,UAAU,IAC1FkC,EAAuB9D,MAAS4B,UAAU,IAAO5B,MAAS4D,SAAS,EAAG,UAAUhC,UAAU,IAChG,OAAI8B,EAAuBC,EAA2B,KAC9CD,EAAuBC,GAAsBD,EAAuBG,EAA6B,KACjGH,EAAuBG,GAAwBH,EAAuBI,EAA6B,KAChG,O,SJXH9B,K,UAAAA,E,0BAAAA,E,qBAAAA,M,gBKKC+B,GAAU,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MACrB,OACI,yBAAKzI,UAAS,mCAA8ByI,IACxC,kBAAC,IAAD,CAAiBpI,KAAMqI,IAAWnI,KAAK,SCgJpCoI,GAhIF,WAAO,IAAD,EAE6BjB,EAAyB,kBAFtD,mBAERxB,EAFQ,KAEQ0C,EAFR,OAGuBhB,oBAAkB,GAHzC,mBAGRiB,EAHQ,KAGKC,EAHL,OAIqBlB,mBAAiB,GAJtC,mBAIRmB,EAJQ,KAIIC,EAJJ,OAKqCpB,mBAAiB,GALtD,mBAKRqB,EALQ,KAKYC,EALZ,OAM+BtB,mBAAiB,GANhD,mBAMRuB,EANQ,KAMSC,EANT,OAOexB,mBAAwB,IAPvC,mBAORyB,EAPQ,KAOCC,EAPD,OAQqB1B,mBAAmB,IARxC,mBAQR2B,EARQ,KAQIC,EARJ,OASe5B,oBAAkB,GATjC,mBASR6B,EATQ,KASCC,EATD,OAUmB9B,oBAAkB,GAVrC,oBAUR+B,GAVQ,MAUGC,GAVH,MAYf5B,qBAAU,WACN7C,EAAW0E,eAAe7D,MAAK,SAAC8D,GAC5BN,EAAcM,QAEnB,IAEH9B,qBAAU,WACN,IAAM1C,EAAWb,MAAS4D,SAAS,EAAG,QAAQ3D,OAA7B,oBACXa,EAASd,MAASC,OAAT,oBACf,GAAIwB,EAAgB,CAChB,IAAMV,EAAiB0C,EAAwB5C,EAAUC,GACnDwD,EAAa5D,EAAW4E,eAAe7D,EAAgBO,EAAmBuD,KAC1Ef,EAAqB9D,EAAW4E,eAAe7D,EAAgBO,EAAmBwD,aAClFd,EAAkBhE,EAAW4E,eAAe7D,EAAgBO,EAAmByD,UAC/EC,EAAYhF,EAAWiF,cAAc9E,EAAUC,EAAQW,EAAgBV,EAAgBiB,EAAmBuD,KAChHK,QAAQC,IAAI,CACRvB,EACAE,EACAE,EACAgB,IACDnE,MAAK,YAMoB,IAAD,mBAJnBuE,EAImB,KAHnBC,EAGmB,KAFnBC,EAEmB,KADnBC,EACmB,KACvBd,IAAa,GACbZ,EAAcuB,EAAmB,GAAGnK,OACpC8I,EAAsBsB,EAA2B,GAAGpK,OACpDgJ,EAAmBqB,EAAwB,GAAGrK,OAC9CkJ,EAAWoB,MACZC,OAAM,kBAAMjB,GAAW,SAE/B,CAACxD,IAOJ,OAAIuD,EACO,kBAAC,IAAD,CAAUmB,GAAG,mCAGpBjB,GAEI,yBAAK3J,UAAU,kCACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAASyI,MAAM,oBAS/B,6BACI,yBAAKzI,UAAU,aACX,kBAAC,EAAD,CAAuBoH,UAAWyB,GAC9B,kBAAC,EAAD,CAAY/B,aAAcZ,EAAgBW,QAAS0C,EAAY5C,eAAgB,kBAAMmC,GAAe,IAAQlC,gBA1BpG,SAACK,GACrB2B,EAAkB3B,GAClB6B,GAAe,OA0BP,yBAAK9I,UAAU,OACX,yBAAKA,UAAU,iDACX,uBAAGA,UAAU,gBAAgB+G,QAAS,kBAAM+B,GAAe,KAAO,kBAAC,IAAD,CAAiBzI,KAAMwK,IAAQtK,KAAK,YAIhH2F,GACE,yBAAKlG,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,2BACX,wBAAIA,UAAU,mBAAd,4DAIfkG,GACG,oCACI,kBAAC,EAAD,CAAYxG,SAAUoD,KAAKsD,MAAM2C,KACjC,yBAAK/I,UAAU,8BACX,kBAAC,EAAD,KACI,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,CAAeI,MAAK,UAAK0C,KAAKsD,MAAM6C,GAAhB,QAAwC5I,KAAMH,KAEtE,yBAAKF,UAAU,OACX,kBAAC,EAAD,CAAeI,MAAK,UAAK0C,KAAKsD,MAAM+C,GAAhB,KAAqC9I,KAAMH,QAK/E,yBAAKF,UAAU,sCACX,kBAAC,EAAD,CAAMA,UAAU,cACZ,uBAAGA,UAAU,4BAAb,cA7Gd,EA6Gc,UACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,kBAAC,IAAD,CAAYA,UAAU,eACjB,gBAAGsB,EAAH,EAAGA,MAAH,OAAe,kBAAC,EAAD,CAAqBD,aAAc,EAAGG,IAAK,MAAOI,WAAY,OAAQH,QAAS,GAAIC,QAAS,GAAIH,iBAAkB8H,EAASxH,mBAAoB,EAAGP,MAAOA,EAAQ,GAAIK,OAAQ,aAMjN,yBAAK3B,UAAU,uBACX,yBAAKA,UAAU,iDACX,kBAAC,IAAD,CAAM4K,GAAG,WAAW5K,UAAU,eAAc,kBAAC,IAAD,CAAiBK,KAAMyK,IAAUvK,KAAK,a,6BCrIjGwK,GAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,cACjCC,EAAUvL,mBAAQ,kBAAMwL,KAAQC,aAAY,IAClD,OACE,oCACE,2BAAOrL,UAAU,wBAAwBsL,QAASH,GAAUH,EAA5D,KACA,2BAAO5K,MAAO6K,EAAMjL,UAAU,oBAAoBuL,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBN,EAAcM,EAAOpL,QAAQqL,KAAMT,EAAMU,KAAK,OAAOC,GAAIR,MCZ9HS,I,OAAkB,SAAC,GAA8E,IAA5ExL,EAA2E,EAA3EA,MAAO2E,EAAoE,EAApEA,SACrC,OACI,yBAAK/E,UAAU,QACX,yBAAKA,UAAU,wDAAwDI,GACvE,yBAAKJ,UAAU,sBACV+E,MC2HF8G,I,OAlHC,WAAoB,IAAD,EACCjE,mBAAiB,IADlB,mBACxBtC,EADwB,KACdwG,EADc,OAEHlE,mBAAiB,IAFd,mBAExBrC,EAFwB,KAEhBwG,EAFgB,OAGDnE,qBAHC,mBAGxByB,EAHwB,KAGfC,EAHe,OAIe1B,qBAJf,mBAIxBoE,EAJwB,KAIPC,EAJO,OAKSrE,qBALT,mBAKxBsE,EALwB,KAKVC,EALU,OAMNzE,EAAyB,kBAA3CxB,EANwB,sBAOa0B,qBAPb,mBAOxBpC,EAPwB,KAOR4G,EAPQ,OAQDxE,oBAAkB,GARjB,mBAQxB6B,EARwB,KAQfC,EARe,OASG9B,oBAAkB,GATrB,mBASxB+B,EATwB,KASbC,EATa,KAgC/B,OAAIH,EACO,kBAAC,IAAD,CAAUmB,GAAG,yCAKpB,yBAAK5K,UAAU,oCACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,CAAM4K,GAAG,IAAI5K,UAAU,4CAA2C,kBAAC,IAAD,CAAiBK,KAAMgM,IAAe9L,KAAK,SAEjH,yBAAKP,UAAU,OACX,wBAAIA,UAAU,iCAAd,iBAEJ,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,iBACX,kBAAC,GAAD,CAAYiL,KAAM3F,EAAU4F,cAAe,SAAC9K,GAAD,OAAmB0L,EAAY1L,IAAQ4K,KAAK,UACvF,kBAAC,GAAD,CAAYC,KAAM1F,EAAQ2F,cAAe,SAAC9K,GAAD,OAAmB2L,EAAU3L,IAAQ4K,KAAK,YAG3F,yBAAKhL,UAAU,OACX,yBAAKA,UAAU,sBACX,4BAAQA,UAAU,oBAAoBsM,UAAWhH,IAAaC,EAAQwB,QAxClE,WAChBuC,OAAW9C,GACXyF,OAAmBzF,GACnB2F,OAAgB3F,GAChBoD,GAAa,GACb,IAAMpE,EAAiB0C,EAAwB5C,EAAUC,GACzD6G,EAAkB5G,GAClB,IAAM2E,EAAYhF,EAAWiF,cAAc9E,EAAUC,EAAQW,EAAgBV,EAAgBiB,EAAmBuD,KAC1GuC,EAAoBpH,EAAWiF,cAAc9E,EAAUC,EAAQW,EAAgBV,EAAgBiB,EAAmBwD,aAClHuC,EAAiBrH,EAAWiF,cAAc9E,EAAUC,EAAQW,EAAgBV,EAAgBiB,EAAmByD,UACrHG,QAAQC,IAAI,CAACH,EAAWoC,EAAmBC,IAAiBxG,MAAK,YAAoD,IAAD,mBAAjDgE,EAAiD,KAA5CC,EAA4C,KAA/BC,EAA+B,KAChHN,GAAa,GACbN,EAAWU,GACXiC,EAAmBhC,GACnBkC,EAAgBjC,MACjBS,OAAM,kBAAMjB,GAAW,QAyBd,aAGPC,GAAa,kBAAC,GAAD,CAASlB,MAAM,kBAC5BuD,GAAmBE,GAAgB7C,GAChC,oCACI,kBAAC,GAAD,CAAiBjJ,MAAM,WACnB,yBAAKJ,UAAU,OACX,kBAAC,IAAD,CAAYA,UAAU,uBACjB,gBAAGsB,EAAH,EAAGA,MAAH,OAAe,kBAAC,EAAD,CACZD,aAAc,GACdG,IAAK,MACLI,WAA+B,OAAnB4D,EAA0B,OAAS,QAC/C/D,QAAS,GACTC,QAAS,GACTH,iBAAkB8H,EAClBxH,mBAAoB,EACpBP,MAAOA,EAAQ,GACfK,OAAQ,WAKxB,kBAAC,GAAD,CAAiBvB,MAAM,SACnB,yBAAKJ,UAAU,OACX,kBAAC,IAAD,CAAYA,UAAU,uBACjB,gBAAGsB,EAAH,EAAGA,MAAH,OAAe,kBAAC,EAAD,CACZD,aAAc,GACdG,IAAK,QACLI,WAA+B,OAAnB4D,EAA0B,OAAS,QAC/C/D,QAAS,GACTC,QAAS,GACTH,iBAAkByK,EAClBnK,mBAAoB,EACpBP,MAAOA,EAAQ,GACfK,OAAQ,WAIxB,kBAAC,GAAD,CAAiBvB,MAAM,YACnB,yBAAKJ,UAAU,OACX,kBAAC,IAAD,CAAYA,UAAU,uBACjB,gBAAGsB,EAAH,EAAGA,MAAH,OAAe,kBAAC,EAAD,CACZD,aAAc,GACdG,IAAK,IACLI,WAA+B,OAAnB4D,EAA0B,OAAS,QAC/C/D,QAAS,GACTC,QAAS,GACTH,iBAAkB2K,EAClBrK,mBAAoB,EACpBP,MAAOA,EAAQ,GACfK,OAAQ,eCzH7B,OAA0B,6C,SCqC1B8K,I,OA/BS,WAEpB,IAAMC,EAAWC,cAETC,EAAeC,iBAAMH,EAASI,QAA9BF,WAER,OACI,yBAAK5M,UAAU,0CACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,uBAAGA,UAAU,4BAAb,aACA,uBAAGA,UAAU,+BAAb,sCAIZ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wCACX,yBAAK+M,IAAKC,GAAUC,IAAI,YAGhC,yBAAKjN,UAAU,OACX,yBAAKA,UAAU,uBACX,4BAAQA,UAAU,gEAA+D,kBAAC,IAAD,CAAM4K,GAAIgC,GAAwB,IAAK5M,UAAU,eAAjD,UAAjF,WC3BXkN,GAAc,SAAC,GAAsD,IAArDnI,EAAoD,EAApDA,SACnBoI,EAAaR,cAAbQ,SAMR,OAJAnF,qBAAU,WACRoF,OAAOC,SAAS,EAAG,KAClB,CAACF,IAEGpI,G,OCqBMuI,OAvBf,WAGE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,YACV,kBAAC,GAAD,KACE,kBAAC,GAAD,QAGJ,kBAAC,IAAD,CAAOA,KAAM,IAAKC,OAAK,GACrB,kBAAC,GAAD,KACE,kBAAC,GAAD,QAGJ,kBAAC,IAAD,CAAOD,KAAK,oBAAoBE,UAAWhB,QCZ/BiB,QACW,cAA7BN,OAAOV,SAASiB,UAEe,UAA7BP,OAAOV,SAASiB,UAEhBP,OAAOV,SAASiB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpI,MAAK,SAAAqI,GACJA,EAAaC,gBAEd3D,OAAM,SAAA4D,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.aa6fafc4.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport \"./CurrentCo2.scss\";\n\nconst maximumColorRange = 145;\nconst maximumECoValue = 1500;\nconst redColorValue = 0;\n\ninterface Props { eCoValue: number }\n\nexport const CurrentCo2 = ({ eCoValue }: Props): JSX.Element => {\n\n    const backgroundColor = useMemo(() => {\n        return getBackgroundColor(eCoValue);\n    }, [eCoValue]);\n\n    const borderColor = useMemo(() => {\n        return getBorderColor(eCoValue);\n    }, [eCoValue]);\n\n    return (\n        <div className='container pt-0 pb-4 mb-2 current-co2-elem'>\n            <div className='text-center m-auto py-3 rounded-circle outer-circle' style={{ backgroundColor: borderColor }}>\n                <div className='text-center m-auto py-3 shadow rounded-circle inner-circle' style={{ backgroundColor }}>\n                    <p className='h5 p-0 m-0 text-white pt-5 mt-2 eco-elem'>eCO²</p>\n                    <p className='h3 p-0 m-0 text-white mt-1'><span>{eCoValue}</span> ppm</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst getBackgroundColor = (eCoValue: number) => {\n    const hue = ((1 - eCoValue / maximumECoValue) * maximumColorRange);\n    return `hsl(${eCoValue <= maximumECoValue ? hue : redColorValue},63%,49%)`;\n}\n\nconst getBorderColor = (eCoValue: number) => {\n    const hue = ((1 - eCoValue / maximumECoValue) * maximumColorRange);\n    return `hsl(${eCoValue <= maximumECoValue ? hue : redColorValue},62%,59%)`;\n}","export const Icon = {\n    thermometer: `thermometer`,\n    humidity: `humidity`\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThermometerFull, faTint } from '@fortawesome/free-solid-svg-icons';\nimport {Icon} from './Icon';\nimport \"./IconWithValue.scss\";\n\n\nexport const IconWithValue = ({ value, icon }: {value:string, icon:string}):JSX.Element => {\n\n    return <p className='icon-elem'><FontAwesomeIcon icon={getIconFromIconName(icon)} size=\"lg\" /> <span className='value-elem'>{value}</span></p>\n    \n}\n\nconst getIconFromIconName = (iconName:string) => {\n    switch (iconName) {\n        case Icon.humidity: return faTint;\n        case Icon.thermometer: return faThermometerFull;\n        default: return faTint;\n    }\n}","//eslint-disable-next-line\nimport React, { useMemo } from \"react\";\nimport { AreaClosed } from \"@visx/shape\";\nimport {  scaleLinear, scaleTime } from '@visx/scale'\nimport { AxisBottom, AxisLeft } from '@visx/axis';\nimport { extent } from \"d3-array\";\nimport { GridColumns } from '@visx/grid';\nimport moment from 'moment';\nimport \"./TimeWithValuesGraph.scss\";\nimport { ApiResponse } from '../../types/api';\n\n\nconst graphColor = '#bdc3c7';\nconst axisColor = '#878a8c';\n\n// axis config\nconst axisBottomTickLabelProps = {\n  dx: '0em',\n  dy: '-0.2em',\n  textAnchor: 'middle' as const,\n  fontFamily: 'Montserrat',\n  fontSize: 10,\n  fill: axisColor,\n};\nconst axisLeftTickLabelProps = {\n  dx: '0.4em',\n  fontFamily: 'Montserrat',\n  fontSize: 10,\n  textAnchor: 'end' as const,\n  fill: axisColor,\n};\n\ninterface Props {\n  endTimeValue: number,\n  width: number,\n  historicalValues: ApiResponse[],\n  uom: string,\n  marginY: number,\n  marginX: number,\n  height: number,\n  timeFormat: string,\n  bottomAxisNumTicks?: number\n}\n\n// Graph setup\nexport const TimeWithValuesGraph = ({ endTimeValue, width, historicalValues, uom, marginY, marginX, height, timeFormat, bottomAxisNumTicks }: Props): JSX.Element => {\n\n  const timeRank = {\n    startTime: 0,\n    endTime: endTimeValue\n  }\n  const stock = historicalValues\n  const getDate = (d: ApiResponse) => new Date(parseInt(d.time) * 1000);\n  const getStockValue = (d: ApiResponse) => d.value;\n  const xMax = width - marginX;\n  const yMax = height - marginY;\n\n\n  // scales\n  const scaleGridColumns = useMemo(\n    () =>\n      scaleLinear({\n        range: [marginX, xMax + marginX],\n        domain: [1, timeRank.endTime],\n      }),\n    [xMax, marginX, timeRank.endTime]\n  );\n  const scaleAxisLeft = useMemo(\n    () =>\n      scaleLinear({\n        domain: [\n          Math.max(...stock.map((d: ApiResponse) => d.value)),\n          Math.min(...stock.map((d: ApiResponse) => d.value))\n        ],\n        range: [0, yMax - marginY],\n      }),\n    [yMax, marginY, stock]\n  );\n\n  const scaleAxisBottom = useMemo(\n    () =>\n      scaleTime({\n        range: [marginX, xMax + marginX],\n        domain: extent(stock, getDate) as [Date, Date]\n      }),\n    [xMax, marginX, stock]\n  );\n\n  const dateScale = useMemo(\n    () =>\n      scaleTime({\n        range: [marginX, xMax + marginX],\n        domain: extent(stock, getDate) as [Date, Date]\n      }),\n    [xMax, marginX, stock]\n  );\n  const stockValueScale = useMemo(\n    () =>\n      scaleLinear({\n        range: [marginY, yMax],\n        domain: [\n          Math.min(...stock.map((d: ApiResponse) => Math.min(d.value))),\n          Math.max(...stock.map((d: ApiResponse) => Math.max(d.value)))\n        ],\n        reverse: true\n      }),\n    [yMax, marginY, stock]\n  );\n\n  return (\n    <div className='text-left time-with-values-graph-elem'>\n      <svg width={width + marginY} height={height}>\n        <AreaClosed\n          data={stock}\n          x={(d: ApiResponse) => dateScale(getDate(d)) ?? 0}\n          y={(d: ApiResponse) => stockValueScale(getStockValue(d)) ?? 0}\n          yScale={stockValueScale}\n          fill={graphColor}\n        />\n        <GridColumns\n          scale={scaleGridColumns}\n          height={yMax - marginY}\n          top={marginY}\n          numTicks={timeRank.endTime}\n          stroke={axisColor}\n          strokeWidth={1.5}\n        />\n\n        <AxisBottom\n          top={yMax}\n          scale={scaleAxisBottom}\n          numTicks={bottomAxisNumTicks}\n          stroke={axisColor}\n          hideTicks={true}\n          tickStroke={axisColor}\n          tickLabelProps={() => axisBottomTickLabelProps}\n          tickFormat={(value) => {\n            return moment(value as Date).format(timeFormat)\n          }}\n        />\n\n        <AxisLeft\n          top={marginY}\n          left={marginX}\n          scale={scaleAxisLeft}\n          numTicks={3}\n          hideTicks={true}\n          stroke={axisColor}\n          tickStroke={axisColor}\n          tickLabelProps={() => axisLeftTickLabelProps}\n          tickFormat={(e) => `${e} ${uom}`}\n        />\n\n      </svg>\n    </div>\n  );\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport './Card.scss'\n\ninterface Props {\n    children: JSX.Element | JSX.Element[],\n    className?: string\n}\n\nexport const Card = ({ children, className }: Props) => {\n    const classes = classnames(`card-elem`, className);\n    return (\n        <div className={classes}>\n            {children}\n        </div>\n    )\n}\n\n","export const config = {\n    apiUrl: `http://134.209.80.241:3100/`\n}","import axios from 'axios';\nimport { config } from '../../config';\nimport { ApiResponse } from '../../types/api';\nimport moment from 'moment';\nimport { ApiServiceDataProp } from './ApiServiceDataProp';\n\nexport class ApiService {\n    static user: string;\n    static async makeGetRequest(endpoint: string, user?: string, fromDate?: number, toDate?: number, timeScaleValue?: string, dataValue?: string) {\n        return axios({\n            method: 'get',\n            url: config.apiUrl + endpoint,\n            \n            params: {\n                fromDate: fromDate,\n                toDate: toDate,\n                user: user,\n                aggregateTimeScale: timeScaleValue,\n                dataToGet: dataValue\n            },\n        }).then((response) => {\n            return response.data;\n        })\n    }\n\n    static async getPeriodData(fromDate: string, toDate: string, selectedDevice: string, timeScaleValue: string, dataValue: ApiServiceDataProp): Promise<ApiResponse[]> {\n        const fromDateTs = Math.round(moment(fromDate).valueOf()/1000);\n        const toDateTs = Math.round(moment(toDate).valueOf()/1000);\n        return ApiService.makeGetRequest('data/period', selectedDevice, fromDateTs, toDateTs, timeScaleValue, dataValue);\n        //return Promise.resolve(historicalValues);\n    }\n    static async getUsersList(): Promise<Array<string>> {\n        return ApiService.makeGetRequest('users');\n        // return Promise.resolve(['@erguro1973', 'Andreas_IBZ', '@Andreas_IBZ']);\n    }\n\n    static async getCurrentData(selectedDevice: string, dataValue: string): Promise<ApiResponse[]> {\n        return ApiService.makeGetRequest('data/current', selectedDevice, undefined, undefined, undefined, dataValue);\n        //return Promise.resolve({value: 29, time: \"1587726000000\"});\n        \n    }\n    \n}","export enum ApiServiceDataProp {\n    co2=`co2`,\n    temperature=`temperature`,\n    humidity=`humidity`\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport './LateralBar.scss';\n\ninterface Props {\n    devices: string[],\n    activeDevice: string,\n    onClickOnClose: () => void,\n    onClickOnDevice: (device: string) => void,\n}\n\nexport const LateralBar = ({ onClickOnClose, onClickOnDevice, devices, activeDevice }: Props): JSX.Element => {\n\n    return (\n        <div className=\"side-menu\">\n            <div className=\"row top d-flex p-3 pl-4 justify-content-between align-items-center text-center\">\n                <p className=\"col ml-5 mt-4 font-weight-bold\">CODOS APP</p>\n                <div className=\"close-button border-0 mr-4\" onClick={onClickOnClose}>\n                    <FontAwesomeIcon icon={faTimesCircle} size=\"lg\" />\n                </div>\n            </div>\n\n            <div className=\"row menu my-5 ml-5 d-flex flex-column \">\n                <p className=\"font-weight-bold pb-4 h5\">Listado de dispositivos</p>\n                <ul className='list-unstyled'>\n                    {devices.map(device => (\n                        <li key={device} \n                                className={`border-0 my-2 px-0 ${device === activeDevice && 'menu-button-actived'} menu-button`}\n                                onClick={() => onClickOnDevice(device)}>\n                                {device}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            <hr className=\"ml-5 text-left font-weight-bold\" />\n\n            <div className=\"row about ml-5 mt-5 font-weight-bold\">\n                <p>About</p>\n            </div>\n\n        </div >\n    )\n}\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './LateralMenuTransition.scss';\n\ninterface Props {\n    children: JSX.Element,\n    isVisible: boolean,\n}\n\nexport const LateralMenuTransition = ({ children, isVisible }: Props) => {\n    return (\n        <>\n            <CSSTransition\n                in={isVisible}\n                timeout={1000}\n                classNames='lateral'\n                unmountOnExit\n            >\n                {children}\n            </CSSTransition>\n        </>\n    )\n};\n","import { useState, useEffect } from 'react';\n\nexport const useStateWithLocalStorage = (localStorageKey: string): [string, (state: string) => void] => {\n    const [value, setValue] = useState(\n        localStorage.getItem(localStorageKey) || ''\n    );\n\n    useEffect(() => {\n        localStorage.setItem(localStorageKey, value);\n    }, [value, localStorageKey]);\n\n    return [value, setValue];\n};","import moment from 'moment';\n\n\nexport const calculateTimeScaleValue = (fromDate:string , toDate:string): string => {\n    const timeRecivedDiference = Math.round(moment(toDate).valueOf()/1000) - Math.round(moment(fromDate).valueOf()/1000);\n    const threeDaysDiference = moment().valueOf()/1000 - moment().subtract(3, 'days').valueOf()/1000;\n    const threeMonthsDiference = moment().valueOf()/1000 - moment().subtract(3, 'months').valueOf()/1000;\n    const sevenMonthsDiference = moment().valueOf()/1000 - moment().subtract(7, 'months').valueOf()/1000;\n    if (timeRecivedDiference < threeDaysDiference) return '1h';\n    else if(timeRecivedDiference > threeDaysDiference && timeRecivedDiference < threeMonthsDiference) return '1d';\n    else if(timeRecivedDiference > threeMonthsDiference && timeRecivedDiference < sevenMonthsDiference) return '1w'\n    else return'4w'\n\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport './Loading.scss';\n\nexport const Loading = ({color}: any) => {\n    return (\n        <div className={`text-center loading py-5 ${color}`}>\n            <FontAwesomeIcon icon={faSpinner} size=\"lg\" />\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { CurrentCo2 } from '../../components/CurrentCo2/CurrentCo2';\nimport { IconWithValue } from '../../components/IconWithValue/IconWithValue';\nimport { Icon } from '../../components/IconWithValue/Icon';\nimport ParentSize from \"@visx/responsive/lib/components/ParentSize\";\nimport { TimeWithValuesGraph } from \"../../components/TimeWithValuesGraph/TimeWithValuesGraph\";\nimport { Link, Redirect } from 'react-router-dom';\nimport { Card } from '../../components/Card/Card';\nimport './Main.scss';\nimport { ApiService } from '../../services/ApiService/ApiService';\nimport { ApiResponse } from '../../types/api';\nimport { LateralBar } from '../../components/LateralBar/LateralBar';\nimport { LateralMenuTransition } from '../../components/LateralMenuTransition/LateralMenuTransition';\nimport { useStateWithLocalStorage } from '../../hooks/useStateWithLocalStorage';\nimport moment from 'moment';\nimport { calculateTimeScaleValue } from '../../utils/calculateTimeScaleValue';\nimport { ApiServiceDataProp } from '../../services/ApiService/ApiServiceDataProp';\nimport { Loading } from '../../components/Loading/Loading';\n\n\nconst hours = 8;\n\nconst Main = () => {\n\n    const [selectedDevice, setSelectedDevice] = useStateWithLocalStorage('deviceSelected');\n    const [menuActived, setMenuActived] = useState<boolean>(false);\n    const [currentCo2, setCurrentCo2] = useState<number>(0);\n    const [currentTemperature, setCurrentTemperature] = useState<number>(0);\n    const [currentHumidity, setCurrentHumidity] = useState<number>(0)\n    const [co2Data, setCo2Data] = useState<ApiResponse[]>([]);\n    const [deviceList, setDeviceList] = useState<string[]>([]);\n    const [isError, setIsError] = useState<boolean>(false);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        ApiService.getUsersList().then((apiResponse: string[]) => {\n            setDeviceList(apiResponse)\n        });\n    }, [])\n\n    useEffect(() => {\n        const fromDate = moment().subtract(7, 'hour').format(`YYYY-MM-DD HH:mm`);\n        const toDate = moment().format(`YYYY-MM-DD HH:mm`);\n        if (selectedDevice) {\n            const timeScaleValue = calculateTimeScaleValue(fromDate, toDate)\n            const currentCo2 = ApiService.getCurrentData(selectedDevice, ApiServiceDataProp.co2)\n            const currentTemperature = ApiService.getCurrentData(selectedDevice, ApiServiceDataProp.temperature)\n            const currentHumidity = ApiService.getCurrentData(selectedDevice, ApiServiceDataProp.humidity)\n            const periodCo2 = ApiService.getPeriodData(fromDate, toDate, selectedDevice, timeScaleValue, ApiServiceDataProp.co2)\n            Promise.all([\n                currentCo2,\n                currentTemperature,\n                currentHumidity,\n                periodCo2\n            ]).then((\n                [\n                    currentCo2Response,\n                    currentTemperatureResponse,\n                    currentHumidityResponse,\n                    periodCo2Response\n                ]: ApiResponse[][]) => {\n                setIsLoading(false);\n                setCurrentCo2(currentCo2Response[0].value);\n                setCurrentTemperature(currentTemperatureResponse[0].value);\n                setCurrentHumidity(currentHumidityResponse[0].value);\n                setCo2Data(periodCo2Response);\n            }).catch(() => setIsError(true))\n        }\n    }, [selectedDevice]);\n\n    const onClickOnDevice = (device: string) => {\n        setSelectedDevice(device);\n        setMenuActived(false);\n    };\n\n    if (isError) {\n        return <Redirect to='/unexpected-error?redirectTo=/' />\n    }\n\n    if (isLoading) {\n        return (\n            <div className='container is-loading-container'>\n                <div className=\"row\">\n                    <div className='col is-loading'>\n                        <Loading color='loading-dark'></Loading>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n\n    return (\n        <div>\n            <div className='container'>\n                <LateralMenuTransition isVisible={menuActived}>\n                    <LateralBar activeDevice={selectedDevice} devices={deviceList} onClickOnClose={() => setMenuActived(false)} onClickOnDevice={onClickOnDevice} />\n                </LateralMenuTransition>\n                <div className='row'>\n                    <div className='col ml-4 pt-4 mt-3 h4 mb-0 d-inline menu-elem' >\n                        <p className='mb-0 d-inline' onClick={() => setMenuActived(true)}><FontAwesomeIcon icon={faBars} size=\"lg\" /></p>\n                    </div>\n                </div>\n            </div>\n            {!selectedDevice &&\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col px-5 py-3 pt-5 mt-3'>\n                            <h4 className='select-a-device'>Acceda al menú lateral y seleccione un dispositivo</h4>\n                        </div>\n                    </div>\n                </div>}\n            {selectedDevice &&\n                <>\n                    <CurrentCo2 eCoValue={Math.round(currentCo2)} />\n                    <div className='container px-5 text-center'>\n                        <Card>\n                            <div className='row icon-with-value-elem'>\n                                <div className='col'>\n                                    <IconWithValue value={`${Math.round(currentTemperature)}º`} icon={Icon.thermometer} />\n                                </div>\n                                <div className='col'>\n                                    <IconWithValue value={`${Math.round(currentHumidity)}%`} icon={Icon.humidity} />\n                                </div>\n                            </div>\n                        </Card>\n                    </div>\n                    <div className='container px-5 pt-3 mt-4 mb-4 pb-2'>\n                        <Card className='graph-elem'>\n                            <p className='text-elem pt-3 pl-2 mb-3'>Últimas {hours} horas</p>\n                            <div className='row'>\n                                <div className='col text-center'>\n                                    <ParentSize className='graph-elem'>\n                                        {({ width }) => <TimeWithValuesGraph endTimeValue={8} uom={'ppm'} timeFormat={'H:mm'} marginY={20} marginX={60} historicalValues={co2Data} bottomAxisNumTicks={7} width={width - 20} height={160} />}\n                                    </ParentSize>\n                                </div>\n                            </div>\n                        </Card>\n                    </div>\n                    <div className='container pt-1 pb-5'>\n                        <div className='text-center m-auto rounded-circle search-elem'>\n                            <Link to='/history' className='search-link'><FontAwesomeIcon icon={faSearch} size=\"lg\" /></Link>\n                        </div>\n                    </div>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default Main\n","import React, { useMemo } from 'react';\nimport './DatePicker.scss';\nimport shortid from 'shortid';\n\ninterface Props {\n  text: string,\n  date?: string,\n  onDateChanged: (value: string) => void;\n}\n\nexport const DatePicker = ({ text, date, onDateChanged }: Props): JSX.Element => {\n  const idValue = useMemo(() => shortid.generate(), []);\n  return (\n    <>\n      <label className='pt-2 date-picker-text' htmlFor={idValue}>{text}:</label>\n      <input value={date} className='date-picker-input' onChange={({ target }) => onDateChanged(target.value)} name={text} type=\"date\" id={idValue} />\n    </>\n  )\n}\n","import React from 'react';\nimport './CardWithTextTab.scss';\n\nexport const CardWithTextTab = ({ value ,children }: {value: string, children: JSX.Element} ):JSX.Element => {\n    return (\n        <div className='py-4'>\n            <div className='card-tab inline d-inline-block px-3 py-1 text-center'>{value}</div>\n            <div className='card-with-text-tab'>\n                {children}\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport ParentSize from \"@visx/responsive/lib/components/ParentSize\";\nimport { DatePicker } from '../../components/DatePicker/DatePicker';\nimport { TimeWithValuesGraph } from '../../components/TimeWithValuesGraph/TimeWithValuesGraph';\nimport { CardWithTextTab } from '../../components/CardWithTextTab/CardWithTextTab'\nimport './History.scss'\nimport { ApiService } from '../../services/ApiService/ApiService';\nimport { ApiResponse } from '../../types/api';\nimport { useStateWithLocalStorage } from '../../hooks/useStateWithLocalStorage';\nimport { calculateTimeScaleValue } from '../../utils/calculateTimeScaleValue';\nimport { ApiServiceDataProp } from '../../services/ApiService/ApiServiceDataProp';\nimport { Loading } from '../../components/Loading/Loading';\n\n\nconst History = (): JSX.Element => {\n    const [fromDate, setFromDate] = useState<string>(\"\");\n    const [toDate, setToDate] = useState<string>(\"\");\n    const [co2Data, setCo2Data] = useState<ApiResponse[]>();\n    const [temperatureData, setTemperatureData] = useState<ApiResponse[]>();\n    const [humidityData, setHumidityData] = useState<ApiResponse[]>();\n    const [selectedDevice] = useStateWithLocalStorage('deviceSelected');\n    const [timeScaleValue, setTimeScaleValue] = useState<string>();\n    const [isError, setIsError] = useState<boolean>(false);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n\n\n    const refetchData = () => {\n        setCo2Data(undefined)\n        setTemperatureData(undefined)\n        setHumidityData(undefined)\n        setIsLoading(true);\n        const timeScaleValue = calculateTimeScaleValue(fromDate, toDate);\n        setTimeScaleValue(timeScaleValue)\n        const periodCo2 = ApiService.getPeriodData(fromDate, toDate, selectedDevice, timeScaleValue, ApiServiceDataProp.co2)\n        const periodTemperature = ApiService.getPeriodData(fromDate, toDate, selectedDevice, timeScaleValue, ApiServiceDataProp.temperature)\n        const periodHumidity = ApiService.getPeriodData(fromDate, toDate, selectedDevice, timeScaleValue, ApiServiceDataProp.humidity)\n        Promise.all([periodCo2, periodTemperature, periodHumidity]).then(([co2, temperature, humidity]: ApiResponse[][]) => {\n            setIsLoading(false);\n            setCo2Data(co2)\n            setTemperatureData(temperature)\n            setHumidityData(humidity)\n        }).catch(() => setIsError(true));\n\n    }\n\n    if (isError) {\n        return <Redirect to='/unexpected-error?redirectTo=history' />\n    }\n\n\n    return (\n        <div className='container history-elem-container'>\n            <div className='row'>\n                <Link to='/' className='ml-4 mt-4 rounded-circle arrow-back-elem'><FontAwesomeIcon icon={faChevronLeft} size=\"lg\" /></Link>\n            </div>\n            <div className='row'>\n                <h1 className='text-center history-text-elem'>Histórico</h1>\n            </div>\n            <div className='row date-range-pickers-container pt-3 mt-3'>\n                <div className=\"col mx-4 my-3\">\n                    <DatePicker date={fromDate} onDateChanged={(value: string) => setFromDate(value)} text='Desde' />\n                    <DatePicker date={toDate} onDateChanged={(value: string) => setToDate(value)} text='Hasta' />\n                </div>\n            </div>\n            <div className='row'>\n                <div className=\"col pl-4 ml-3 my-3\">\n                    <button className='search-button btn' disabled={!fromDate || !toDate} onClick={refetchData}>Buscar </button>\n                </div>\n            </div>\n            {isLoading && <Loading color='loading-white' />}\n            {temperatureData && humidityData && co2Data &&\n                <>\n                    <CardWithTextTab value='eCO²'>\n                        <div className=\"row\">\n                            <ParentSize className='history-graph-elem'>\n                                {({ width }) => <TimeWithValuesGraph\n                                    endTimeValue={10}\n                                    uom={'ppm'}\n                                    timeFormat={timeScaleValue === '1h' ? 'H:mm' : 'DD-MM'}\n                                    marginY={20}\n                                    marginX={55}\n                                    historicalValues={co2Data}\n                                    bottomAxisNumTicks={5}\n                                    width={width - 20}\n                                    height={118}\n                                />}\n                            </ParentSize>\n                        </div>\n                    </CardWithTextTab>\n                    <CardWithTextTab value='Temp.'>\n                        <div className=\"row\">\n                            <ParentSize className='history-graph-elem'>\n                                {({ width }) => <TimeWithValuesGraph\n                                    endTimeValue={10}\n                                    uom={'ºC'}\n                                    timeFormat={timeScaleValue === '1h' ? 'H:mm' : 'DD-MM'}\n                                    marginY={20}\n                                    marginX={55}\n                                    historicalValues={temperatureData}\n                                    bottomAxisNumTicks={5}\n                                    width={width - 20}\n                                    height={118} />}\n                            </ParentSize>\n                        </div>\n                    </CardWithTextTab>\n                    <CardWithTextTab value='Humidity'>\n                        <div className=\"row\">\n                            <ParentSize className='history-graph-elem'>\n                                {({ width }) => <TimeWithValuesGraph\n                                    endTimeValue={10}\n                                    uom={'%'}\n                                    timeFormat={timeScaleValue === '1h' ? 'H:mm' : 'DD-MM'}\n                                    marginY={20}\n                                    marginX={55}\n                                    historicalValues={humidityData}\n                                    bottomAxisNumTicks={5}\n                                    width={width - 20}\n                                    height={118} />}\n                            </ParentSize>\n                        </div>\n                    </CardWithTextTab>\n                </>\n            }\n        </div>\n    );\n}\n\nexport default History","export default __webpack_public_path__ + \"static/media/unexpected-error.49148320.png\";","import React from 'react'\nimport { Link, useLocation } from 'react-router-dom';\nimport robotImg from '../../img/unexpected-error.png';\nimport { parse } from 'query-string';\nimport './UnexpectedError.scss';\n\nconst UnexpectedError = () => {\n\n    const location = useLocation();\n\n    const { redirectTo } = parse(location.search);\n\n    return (\n        <div className='container pt-5 parent-unexcected-error'>\n            <div className='unexpected-error'>\n                <div className='row'>\n                    <div className='col'>\n                        <div className='m-auto unexpected-error__text'>\n                            <p className='font-weight-bold h5 py-3'>¡Vaya!</p>\n                            <p className='unexpected-error__down-text'>Algo no fue como esperábamos</p>\n                        </div>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col px-5 unexpected-error__robot-img'>\n                        <img src={robotImg} alt=\"robot\" />\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col text-center m-5'>\n                        <button className='btn mt-3 py-2 px-5 font-weight-bold unexpected-error__button'><Link to={redirectTo as string || '/'} className='search-link'>Volver</Link> </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default UnexpectedError;","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const ScrollToTop = ({children}: {children: JSX.Element} ):JSX.Element => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return children;\n}","import React from 'react';\nimport { HashRouter, Switch, Route  } from \"react-router-dom\";\nimport Main from './screens/Main/Main';\nimport History from './screens/History/History';\nimport UnexpectedError from './screens/UnexpectedError/UnexpectedError'\nimport { ScrollToTop } from '../src/components/ScrollToTop/ScrollToTop';\nimport \"./index.scss\";\n\nfunction App() {\n\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path='/history'>\n          <ScrollToTop>\n            <History />\n          </ScrollToTop>\n        </Route>\n        <Route path={'/'} exact>\n          <ScrollToTop>\n            <Main />\n          </ScrollToTop>\n        </Route>\n        <Route path=\"/unexpected-error\" component={UnexpectedError} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}