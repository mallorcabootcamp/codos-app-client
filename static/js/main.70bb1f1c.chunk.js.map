{"version":3,"sources":["components/CurrentCo2/CurrentCo2.jsx","components/IconWithValue/Icon.js","components/IconWithValue/IconWithValue.jsx","components/TimeWithValuesGraph/TimeWithValuesGraph.tsx","components/TimeWithValuesGraph/HistoricalValues.ts","components/Card/Card.jsx","screens/Main/Main.jsx","components/DatePicker/DatePicker.jsx","components/CardWithTextTab/CardWithTextTab.jsx","screens/History/History.jsx","App.js","serviceWorker.js","index.js"],"names":["CurrentCo2","eCoValue","backgroundColor","useMemo","getBackgroundColor","borderColor","getBorderColor","className","style","Icon","IconWithValue","value","icon","getIconFromIconName","size","iconName","faTint","faThermometerFull","axisBottomTickLabelProps","textAnchor","fontFamily","fontSize","fill","axisLeftTickLabelProps","dx","dy","TimeWithValuesGraph","endTimeValue","width","historicalValues","uom","marginY","marginX","height","timeFormat","timeRank","startTime","endTime","stock","slice","getDate","d","Date","date","xMax","yMax","scaleGridColumns","scaleLinear","range","domain","scaleAxisLeft","Math","max","map","close","min","scaleAxisBottom","scaleUtc","extent","dateScale","scaleTime","stockValueScale","reverse","x","y","AreaClosed","data","getStockValue","yScale","GridColumns","scale","top","numTicks","stroke","strokeWidth","AxisBottom","hideTicks","tickStroke","tickLabelProps","tickFormat","moment","format","AxisLeft","left","e","Card","children","Main","faBars","to","faSearch","DatePicker","text","onDateChanged","idValue","shortid","generate","for","onChange","target","name","type","id","CardWithTextTab","History","useState","fromDate","setFromDate","toDate","setToDate","faChevronLeft","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.70bb1f1c.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport \"./CurrentCo2.scss\";\n\nconst maximumColorRange = 145;\nconst maximumECoValue = 100;\nconst redColorValue = 0;\n\nexport const CurrentCo2 = ({ eCoValue }) => {\n\n    const backgroundColor = useMemo(() => {\n        return getBackgroundColor(eCoValue);\n    }, [eCoValue]);\n\n    const borderColor = useMemo(() => {\n        return getBorderColor(eCoValue);\n    }, [eCoValue]);\n\n    return (\n        <div className='container pt-0 pb-4 mb-2 current-co2-elem'>\n            <div className='text-center m-auto py-3 shadow rounded-circle outer-circle' style={{ backgroundColor: borderColor }}>\n                <div className='text-center m-auto py-3 shadow rounded-circle inner-circle' style={{ backgroundColor }}>\n                    <p className='h5 p-0 m-0 text-white pt-5 mt-2 eco-elem'>eCOÂ²</p>\n                    <p className='h3 p-0 m-0 text-white mt-1'><span>{eCoValue}</span> ppm</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst getBackgroundColor = (eCoValue) => {\n    const hue = ((1 - eCoValue / maximumECoValue) * maximumColorRange);\n    return `hsl(${eCoValue <= maximumECoValue ? hue : redColorValue},63%,49%)`;\n}\n\nconst getBorderColor = (eCoValue) => {\n    const hue = ((1 - eCoValue / maximumECoValue) * maximumColorRange);\n    return `hsl(${eCoValue <= maximumECoValue ? hue : redColorValue},62%,59%)`;\n}","export const Icon = {\n    thermometer: `thermometer`,\n    humidity: `humidity`\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThermometerFull, faTint } from '@fortawesome/free-solid-svg-icons';\nimport {Icon} from './Icon';\n\nimport \"./IconWithValue.scss\";\n\nexport const IconWithValue = ({ value, icon }) => {\n\n    return <p className='icon-elem'><FontAwesomeIcon icon={getIconFromIconName(icon)} size=\"lg\" /> <span className='value-elem'>{value}</span></p>\n    \n}\n\nconst getIconFromIconName = (iconName) => {\n    switch (iconName) {\n        case Icon.humidity: return faTint;\n        case Icon.thermometer: return faThermometerFull;\n        default: return faTint;\n    }\n}","//eslint-disable-next-line\nimport React, { useMemo } from \"react\";\nimport { AreaClosed } from \"@visx/shape\";\nimport { scaleUtc, scaleLinear, scaleTime } from '@visx/scale'\nimport { AxisBottom, AxisLeft } from '@visx/axis';\nimport { extent } from \"d3-array\";\nimport { GridColumns } from '@visx/grid';\nimport moment from 'moment';\nimport \"./TimeWithValuesGraph.scss\";\n\n\ninterface HistoricalValues {\n  date: string;\n  close: number;\n}\nconst graphColor = '#bdc3c7';\nconst bgColor = '#ecf0f1';\nconst axisColor = '#878a8c';\n\n// axis config\nconst axisBottomTickLabelProps = {\n  textAnchor: 'middle' as const,\n  fontFamily: 'Arial',\n  fontSize: 10,\n  fill: axisColor,\n};\nconst axisLeftTickLabelProps = {\n  dx: '-0.25em',\n  dy: '0.25em',\n  fontFamily: 'Arial',\n  fontSize: 10,\n  textAnchor: 'end' as const,\n  fill: axisColor,\n};\n\n/**\n * data [{date: Date, value: number}] - Done\n * uom ÂºC ppm Done\n * Added also timeFormat. This could be usefull if we want to show our bottom axis with diferent time values.\n */\n\n// Graph setup\nexport const TimeWithValuesGraph = ({ endTimeValue, width, historicalValues, uom, marginY, marginX, height, timeFormat }: any) => {\n  const timeRank = {\n    startTime: 0,\n    endTime: endTimeValue\n  }\n  const stock = historicalValues.slice(timeRank.startTime, timeRank.endTime);\n  const getDate = (d: HistoricalValues) => new Date(d.date);\n  const getStockValue = (d: HistoricalValues) => d.close;\n  const xMax = width - marginX;\n  const yMax = height - marginY;\n\n\n  // scales\n  const scaleGridColumns = useMemo(\n    () =>\n      scaleLinear({\n        range: [marginX, xMax + marginX],\n        domain: [1, timeRank.endTime],\n      }),\n    [xMax, marginX, timeRank.endTime]\n  );\n  const scaleAxisLeft = useMemo(\n    () =>\n      scaleLinear({\n        domain: [\n          Math.max(...stock.map((d: HistoricalValues) => d.close)),\n          Math.min(...stock.map((d: HistoricalValues) => d.close))\n        ],\n        range: [0, yMax - marginY],\n      }),\n    [yMax, marginY, stock]\n  );\n\n  const scaleAxisBottom = useMemo(\n    () =>\n      scaleUtc({\n        range: [marginX, xMax + marginX],\n        domain: extent(stock, getDate) as [Date, Date]\n      }),\n    [xMax, marginX, stock]\n  );\n\n  const dateScale = useMemo(\n    () =>\n      scaleTime({\n        range: [marginX, xMax + marginX],\n        domain: extent(stock, getDate) as [Date, Date]\n      }),\n    [xMax, marginX, stock]\n  );\n  const stockValueScale = useMemo(\n    () =>\n      scaleLinear({\n        range: [marginY, yMax],\n        domain: [\n          Math.min(...stock.map((d: HistoricalValues) => Math.min(d.close))),\n          Math.max(...stock.map((d: HistoricalValues) => Math.max(d.close)))\n        ],\n        reverse: true\n      }),\n    [yMax, marginY, stock]\n  );\n\n  return (\n    <div className='text-left time-with-values-graph-elem'>\n      <svg width={width + marginY} height={height}>\n        <rect\n          x={marginX}\n          y={marginY}\n          width={width - marginX}\n          height={height - marginY * 2}\n          fill={bgColor}\n        ></rect>\n        <AreaClosed\n          data={stock}\n          x={(d: HistoricalValues) => dateScale(getDate(d)) ?? 0}\n          y={(d: HistoricalValues) => stockValueScale(getStockValue(d)) ?? 0}\n          yScale={stockValueScale}\n          fill={graphColor}\n        />\n        <GridColumns\n          scale={scaleGridColumns}\n          height={yMax - marginY}\n          top={marginY}\n          numTicks={timeRank.endTime}\n          stroke={axisColor}\n          strokeWidth={1.5}\n        />\n        \n          <AxisBottom\n            top={yMax}\n            scale={scaleAxisBottom}\n            numTicks={timeRank.endTime}\n            stroke={axisColor}\n            hideTicks={true}\n            tickStroke={axisColor}\n            tickLabelProps={() => axisBottomTickLabelProps}\n            tickFormat={(value: any) => {\n              return moment(value as Date).format(timeFormat)\n            }}\n          />\n      \n          <AxisLeft\n            top={marginY}\n            left={marginX}\n            scale={scaleAxisLeft}\n            numTicks={3}\n            hideTicks={true}\n            stroke={axisColor}\n            tickStroke={axisColor}\n            tickLabelProps={() => axisLeftTickLabelProps}\n            tickFormat={(e) => `${e} ${uom}`}\n          />\n\n      </svg>\n    </div>\n  );\n}\n","export interface HistoricalValues {\n    date: string;\n    close: number;\n  }\n  \n  const historicalValues: HistoricalValues[] = [\n    { date: \"2020-04-24T00:00:00.000Z\", close: 5 },\n    { date: \"2020-04-24T01:00:00.000Z\", close: 5 },\n    { date: \"2020-04-24T02:00:00.000Z\", close: 30 },\n    { date: \"2020-04-24T03:00:00.000Z\", close: 5 },\n    { date: \"2020-04-24T04:00:00.000Z\", close: 0 },\n    { date: \"2020-04-24T05:00:00.000Z\", close: 9 },\n    { date: \"2020-04-24T06:00:00.000Z\", close: 3 },\n    { date: \"2020-04-24T07:00:00.000Z\", close: 1 },\n    { date: \"2020-04-24T08:00:00.000Z\", close: 3 },\n    { date: \"2020-04-24T09:00:00.000Z\", close: 4 },\n    { date: \"2020-04-24T10:00:00.000Z\", close: 6 },\n    { date: \"2020-04-24T11:00:00.000Z\", close: 8 },\n    { date: \"2020-04-24T12:00:00.000Z\", close: 2 },\n    { date: \"2020-04-24T13:00:00.000Z\", close: 5 },\n    { date: \"2020-04-24T14:00:00.000Z\", close: 15 },\n    { date: \"2020-04-24T15:00:00.000Z\", close: 22 },\n    { date: \"2020-04-24T16:00:00.000Z\", close: 30 },\n    { date: \"2020-04-24T17:00:00.000Z\", close: 33 },\n    { date: \"2020-04-24T18:00:00.000Z\", close: 32 },\n    { date: \"2020-04-24T19:00:00.000Z\", close: 25 },\n    { date: \"2020-04-24T20:00:00.000Z\", close: 15 },\n    { date: \"2020-04-24T21:00:00.000Z\", close: 5 },\n    { date: \"2020-04-24T22:00:00.000Z\", close: 6 },\n    { date: \"2020-04-24T23:00:00.000Z\", close: 5 },\n    { date: \"2020-04-25T00:00:00.000Z\", close: 2 }\n  ];\n  \n  export default historicalValues;\n  ","import React from 'react'\nimport './Card.scss'\n\nexport const Card = ({children}) => {\n    return (\n        <div className='card-elem'>\n            {children}\n        </div>\n    )\n}\n\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { CurrentCo2 } from '../../components/CurrentCo2/CurrentCo2.jsx';\nimport { IconWithValue } from '../../components/IconWithValue/IconWithValue.jsx';\nimport { Icon } from '../../components/IconWithValue/Icon';\nimport ParentSize from \"@visx/responsive/lib/components/ParentSize\";\nimport { TimeWithValuesGraph } from \"../../components/TimeWithValuesGraph/TimeWithValuesGraph\";\nimport historicalValues from \"../../components/TimeWithValuesGraph/HistoricalValues\";\nimport { Link } from 'react-router-dom';\nimport { Card } from '../../components/Card/Card';\nimport './Main.scss';\n\nconst hours = 8;\n\nconst Main = () => {\n    return (\n        <div>\n            <div className='container'>\n                <div className='row'>\n                    <div className='col ml-4 pt-4 mt-3 h4 mb-0 d-inline menu-elem' >\n                        <p className='mb-0'><FontAwesomeIcon icon={faBars} size=\"lg\" /></p>\n                    </div>\n                </div>\n            </div>\n            <CurrentCo2 eCoValue={0} />\n            <div className='container px-5'>\n                <Card>\n                    <div className='row icon-with-value-elem'>\n                        <div className='col'>\n                            <IconWithValue value='23Âº' icon={Icon.thermometer} />\n                        </div>\n                        <div className='col'>\n                            <IconWithValue value='85%' icon={Icon.humidity} />\n                        </div>\n                    </div>\n                </Card>\n            </div>\n            <div className='container px-5 pt-1 mt-4 mb-4 pb-2'>\n                <Card className='graph-elem'>\n                    <p className='text-elem pt-3 pl-2 mb-3'>Ãltimas {hours} horas</p>\n                    <div className='row'>\n                        <div className='col text-center'>\n                            <ParentSize className='graph-elem'>\n                                {({ width }) => <TimeWithValuesGraph endTimeValue={8} uom={'ppm'} timeFormat={'HH:mm'} marginY={20} marginX={50} historicalValues={historicalValues} width={width - 25} height={160} />}\n                            </ParentSize>\n                    </div>\n                    </div>\n                </Card>\n            </div>\n            <div className='container pt-1 pb-5'>\n                <div className='text-center m-auto rounded-circle search-elem'>\n                    <Link to='/History' className='search-link'><FontAwesomeIcon icon={faSearch} size=\"lg\" /></Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Main\n","import React, { useMemo } from 'react';\nimport './DatePicker.scss';\nimport shortid from 'shortid';\n\nexport const DatePicker = ({ text, date, onDateChanged }) => {\n  const idValue = useMemo(() => shortid.generate(), []);\n  return (\n    <>\n      <div>\n        <label className='pt-2 date-picker-text' for={idValue}>{text}:</label>\n      </div>\n        <input value={date} className='date-picker-input' onChange={({ target }) => { onDateChanged(target.value) }} name={text} type=\"date\" id={idValue} />\n    </>\n  )\n}\n","import React from 'react';\nimport './CardWithTextTab.scss';\n\nexport const CardWithTextTab = ({ value ,children }) => {\n    return (\n        <>\n            <div className='card-tab inline d-inline-block px-3 py-1 text-center'>{value}</div>\n            <div className='card-with-text-tab'>\n                {children}\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport ParentSize from \"@visx/responsive/lib/components/ParentSize\";\nimport { DatePicker } from '../../components/DatePicker/DatePicker';\nimport { TimeWithValuesGraph } from '../../components/TimeWithValuesGraph/TimeWithValuesGraph';\nimport historicalValues from \"../../components/TimeWithValuesGraph/HistoricalValues\";\nimport { CardWithTextTab } from '../../components/CardWithTextTab/CardWithTextTab'\nimport './History.scss'\n\nconst History = () => {\n    const [fromDate, setFromDate] = useState();\n    const [toDate, setToDate] = useState();\n\n    return (\n        <div className='container history-elem-container'>\n            <div className='row'>\n                <Link to='/' className='ml-4 mt-4 rounded-circle arrow-back-elem'><FontAwesomeIcon icon={faChevronLeft} size=\"lg\" /></Link>\n            </div>\n            <div className='row'>\n                <h1 className='text-center history-text-elem'>HistÃ³rico</h1>\n            </div>\n            <div className='row date-range-pickers-container pt-3 mt-3'>\n                <div className=\"col mx-4 my-3\">\n                    <DatePicker date={fromDate} onDateChanged={(value) => setFromDate(value)} text='Desde' />\n                    <DatePicker date={toDate} onDateChanged={(value) => setToDate(value)} text='Hasta' />\n                </div>\n            </div>\n            <div className='row'>\n                <div className=\"col pl-4 ml-3 my-3\">\n                    <button className='search-button btn'>Buscar </button>\n                </div>\n            </div>\n            <CardWithTextTab value='eCOÂ²'>\n                <div className=\"row\">\n                    <ParentSize className='history-graph-elem'>\n                        {({ width }) => <TimeWithValuesGraph endTimeValue={10} uom={'ppm'} timeFormat={'H:mm'} marginY={20} marginX={50} historicalValues={historicalValues} width={width - 20} height={118} />}\n                    </ParentSize>\n                </div>\n            </CardWithTextTab>\n            <CardWithTextTab value='Temp.'>\n                <div className=\"row\">\n                    <ParentSize className='history-graph-elem'>\n                        {({ width }) => <TimeWithValuesGraph endTimeValue={10} uom={'ÂºC'} timeFormat={'H:mm'} marginY={20} marginX={50} historicalValues={historicalValues} width={width - 20} height={118} />}\n                    </ParentSize>\n                </div>\n            </CardWithTextTab>\n            <CardWithTextTab value='xxx'>\n                <div className=\"row\">\n                    <ParentSize className='history-graph-elem'>\n                        {({ width }) => <TimeWithValuesGraph endTimeValue={10} uom={'xxx'} timeFormat={'H:mm'} marginY={20} marginX={50} historicalValues={historicalValues} width={width - 20} height={118} />}\n                    </ParentSize>\n                </div>\n            </CardWithTextTab>\n        </div>\n    );\n}\n\nexport default History","import React from 'react';\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Main from './screens/Main/Main';\nimport History from './screens/History/History';\nimport \"./index.scss\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path='/History'>\n          <History />\n        </Route>\n        <Route path='/' exact>\n          <Main />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}