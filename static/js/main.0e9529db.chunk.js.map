{"version":3,"sources":["components/IconWithValue/Icon.ts","components/CurrentCo2/CurrentCo2.tsx","components/IconWithValue/IconWithValue.tsx","components/TimeWithValuesGraph/TimeWithValuesGraph.tsx","components/Card/Card.tsx","config.ts","services/ApiService/calculateTimeScaleValue.ts","services/ApiService/ApiService.ts","services/ApiService/ApiServiceDataProp.ts","components/LateralBar/LateralBar.tsx","components/LateralMenuTransition/LateralMenuTransition.tsx","hooks/useStateWithLocalStorage.ts","screens/Main/MainGraphConfig.ts","components/Loading/LoadingColors.ts","components/Loading/Loading.tsx","screens/Main/State.ts","screens/History/HistoryGraphConfig.ts","screens/Main/Main.tsx","components/DatePicker/DatePicker.tsx","components/CardWithTextTab/CardWithTextTab.tsx","components/GreyScreenWithTitleLayout/GreyScreenWithTitleLayout.tsx","screens/History/History.tsx","img/unexpected-error.png","screens/UnexpectedError/UnexpectedError.tsx","components/ScrollToTop/ScrollToTop.tsx","screens/About/About.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Icon","maximumECoValue","CurrentCo2","eCoValue","backgroundColor","useMemo","getBackgroundColor","borderColor","getBorderColor","className","style","IconWithValue","value","icon","getIconFromIconName","size","humidity","faTint","thermometer","faThermometerFull","axisColor","axisBottomTickLabelProps","dx","dy","textAnchor","fontFamily","fontSize","fill","axisLeftTickLabelProps","TimeWithValuesGraph","endTimeValue","width","historicalValues","uom","marginY","marginX","height","timeFormat","bottomAxisNumTicks","widthWithPadding","timeRank","startTime","endTime","stock","getDate","d","Date","parseInt","time","xMax","yMax","scaleGridColumns","scaleLinear","range","domain","scaleAxisLeft","Math","max","map","min","scaleAxisBottom","scaleTime","extent","dateScale","stockValueScale","reverse","AreaClosed","data","x","y","getStockValue","yScale","GridColumns","scale","top","numTicks","stroke","strokeWidth","AxisBottom","hideTicks","tickStroke","tickLabelProps","tickFormat","moment","format","AxisLeft","left","e","Card","children","classes","classnames","config","calculateTimeScaleValue","fromDate","toDate","timeRecivedDiference","round","valueOf","threeDaysDiference","subtract","threeMonthsDiference","sevenMonthsDiference","ApiService","endpoint","user","timeScaleValue","dataValue","axios","method","url","params","aggregateTimeScale","dataToGet","then","response","selectedDevice","fromDateTs","toDateTs","makeGetRequest","undefined","ApiServiceDataProp","LateralBar","onClickOnClose","onClickOnDevice","devices","activeDevice","onClick","faTimesCircle","device","to","LateralMenuTransition","isVisible","CSSTransition","in","timeout","classNames","unmountOnExit","useStateWithLocalStorage","localStorageKey","useState","localStorage","getItem","setValue","useEffect","setItem","MainGraphConfig","LoadingColors","Loading","color","faSpinner","IAction","initialState","ismenuActived","currentCo2","currentTemperature","currentHumidity","co2Data","deviceList","isError","isLoading","HistoryGraphConfig","reducer","state","type","setMenuActived","isMenuActived","setCurrentCo2","setCurrentTemperature","setCurrentHumidity","setCo2Data","setDeviceList","setIsError","setIsLoading","Main","setSelectedDevice","useReducer","dispatch","getUsersList","apiResponse","getCurrentData","co2","temperature","periodCo2","getPeriodData","Promise","all","currentCo2Response","currentTemperatureResponse","currentHumidityResponse","periodCo2Response","catch","useCallback","darkGrey","faBars","faSearch","DatePicker","text","date","onDateChanged","idValue","shortid","generate","htmlFor","onChange","target","name","id","CardWithTextTab","GreyScreenWithTitleLayout","title","faChevronLeft","History","setFromDate","setToDate","temperatureData","setTemperatureData","humidityData","setHumidityData","setTimeScaleValue","disabled","periodTemperature","periodHumidity","white","UnexpectedError","location","useLocation","redirectTo","parse","search","src","robotImg","alt","ScrollToTop","pathname","window","scrollTo","About","href","rel","Package","version","App","path","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0e9529db.chunk.js","sourcesContent":["export enum Icon {\n  thermometer,\n  humidity,\n}\n","import React, { FunctionComponent, useMemo } from \"react\";\nimport \"./CurrentCo2.scss\";\n\nconst maximumColorRange = 145;\nconst maximumECoValue = 1500;\nconst redColorValue = 0;\n\ninterface Props {\n  eCoValue: number;\n}\n\nexport const CurrentCo2: FunctionComponent<Props> = ({ eCoValue }) => {\n  const backgroundColor = useMemo(() => {\n    return getBackgroundColor(eCoValue);\n  }, [eCoValue]);\n\n  const borderColor = useMemo(() => {\n    return getBorderColor(eCoValue);\n  }, [eCoValue]);\n\n  return (\n    <div className=\"container pt-0 pb-4 mb-2 current-co2-elem\">\n      <div\n        className=\"text-center m-auto py-3 rounded-circle outer-circle\"\n        style={{ backgroundColor: borderColor }}\n      >\n        <div\n          className=\"text-center m-auto py-3 shadow rounded-circle inner-circle\"\n          style={{ backgroundColor }}\n        >\n          <p className=\"h5 p-0 m-0 text-white pt-5 mt-2 eco-elem\">eCO²</p>\n          <p className=\"h3 p-0 m-0 text-white mt-1\">\n            <span>{eCoValue}</span> ppm\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst getBackgroundColor = (eCoValue: number) => {\n  const hue = (1 - eCoValue / maximumECoValue) * maximumColorRange;\n  return `hsl(${eCoValue <= maximumECoValue ? hue : redColorValue},63%,49%)`;\n};\n\nconst getBorderColor = (eCoValue: number) => {\n  const hue = (1 - eCoValue / maximumECoValue) * maximumColorRange;\n  return `hsl(${eCoValue <= maximumECoValue ? hue : redColorValue},62%,59%)`;\n};\n","import React, { FunctionComponent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faThermometerFull, faTint } from \"@fortawesome/free-solid-svg-icons\";\nimport { Icon } from \"./Icon\";\nimport \"./IconWithValue.scss\";\n\ninterface Props {\n  value: string;\n  icon: Icon;\n}\n\nexport const IconWithValue: FunctionComponent<Props> = ({ value, icon }) => {\n  return (\n    <p className=\"icon-elem\">\n      <FontAwesomeIcon icon={getIconFromIconName(icon)} size=\"lg\" />{\" \"}\n      <span className=\"value-elem\">{value}</span>\n    </p>\n  );\n};\n\nconst getIconFromIconName = (icon: Icon) => {\n  switch (icon) {\n    case Icon.humidity:\n      return faTint;\n    case Icon.thermometer:\n      return faThermometerFull;\n    default:\n      return faTint;\n  }\n};\n","//eslint-disable-next-line\nimport React, { FunctionComponent, useMemo } from \"react\";\nimport { AreaClosed } from \"@visx/shape\";\nimport { scaleLinear, scaleTime } from \"@visx/scale\";\nimport { AxisBottom, AxisLeft } from \"@visx/axis\";\nimport { extent } from \"d3-array\";\nimport { GridColumns } from \"@visx/grid\";\nimport moment from \"moment\";\nimport \"./TimeWithValuesGraph.scss\";\nimport { ApiResponse } from \"../../types/api\";\n\nconst graphColor = \"#bdc3c7\";\nconst axisColor = \"#878a8c\";\nconst rightPadding = 20;\n\n// axis config\nconst axisBottomTickLabelProps = {\n  dx: \"0em\",\n  dy: \"-0.2em\",\n  textAnchor: \"middle\" as const,\n  fontFamily: \"Montserrat\",\n  fontSize: 10,\n  fill: axisColor,\n};\nconst axisLeftTickLabelProps = {\n  dx: \"0.4em\",\n  fontFamily: \"Montserrat\",\n  fontSize: 10,\n  textAnchor: \"end\" as const,\n  fill: axisColor,\n};\n\ninterface Props {\n  endTimeValue: number;\n  width: number;\n  historicalValues: ApiResponse[];\n  uom: string;\n  marginY: number;\n  marginX: number;\n  height: number;\n  timeFormat: string;\n  bottomAxisNumTicks?: number;\n}\n\nexport const TimeWithValuesGraph: FunctionComponent<Props> = ({\n  endTimeValue,\n  width,\n  historicalValues,\n  uom,\n  marginY,\n  marginX,\n  height,\n  timeFormat,\n  bottomAxisNumTicks,\n}) => {\n  const widthWithPadding = width - rightPadding;\n  const timeRank = {\n    startTime: 0,\n    endTime: endTimeValue,\n  };\n  const stock = historicalValues;\n  const getDate = (d: ApiResponse) => new Date(parseInt(d.time) * 1000);\n  const getStockValue = (d: ApiResponse) => d.value;\n  const xMax = widthWithPadding - marginX;\n  const yMax = height - marginY;\n\n  const scaleGridColumns = useMemo(\n    () =>\n      scaleLinear({\n        range: [marginX, xMax + marginX],\n        domain: [1, timeRank.endTime],\n      }),\n    [xMax, marginX, timeRank.endTime]\n  );\n\n  const scaleAxisLeft = useMemo(\n    () =>\n      scaleLinear({\n        domain: [\n          Math.max(...stock.map((d: ApiResponse) => d.value)),\n          Math.min(...stock.map((d: ApiResponse) => d.value)),\n        ],\n        range: [0, yMax - marginY],\n      }),\n    [yMax, marginY, stock]\n  );\n\n  const scaleAxisBottom = useMemo(\n    () =>\n      scaleTime({\n        range: [marginX, xMax + marginX],\n        domain: extent(stock, getDate) as [Date, Date],\n      }),\n    [xMax, marginX, stock]\n  );\n\n  const dateScale = useMemo(\n    () =>\n      scaleTime({\n        range: [marginX, xMax + marginX],\n        domain: extent(stock, getDate) as [Date, Date],\n      }),\n    [xMax, marginX, stock]\n  );\n  const stockValueScale = useMemo(\n    () =>\n      scaleLinear({\n        range: [marginY, yMax],\n        domain: [\n          Math.min(...stock.map((d: ApiResponse) => Math.min(d.value))),\n          Math.max(...stock.map((d: ApiResponse) => Math.max(d.value))),\n        ],\n        reverse: true,\n      }),\n    [yMax, marginY, stock]\n  );\n\n  return (\n    <div className=\"text-left time-with-values-graph-elem\">\n      <svg width={widthWithPadding + marginY} height={height}>\n        <AreaClosed\n          data={stock}\n          x={(d: ApiResponse) => dateScale(getDate(d)) ?? 0}\n          y={(d: ApiResponse) => stockValueScale(getStockValue(d)) ?? 0}\n          yScale={stockValueScale}\n          fill={graphColor}\n        />\n        <GridColumns\n          scale={scaleGridColumns}\n          height={yMax - marginY}\n          top={marginY}\n          numTicks={timeRank.endTime}\n          stroke={axisColor}\n          strokeWidth={1.5}\n        />\n\n        <AxisBottom\n          top={yMax}\n          scale={scaleAxisBottom}\n          numTicks={bottomAxisNumTicks}\n          stroke={axisColor}\n          hideTicks={true}\n          tickStroke={axisColor}\n          tickLabelProps={() => axisBottomTickLabelProps}\n          tickFormat={(value) => {\n            return moment(value as Date).format(timeFormat);\n          }}\n        />\n\n        <AxisLeft\n          top={marginY}\n          left={marginX}\n          scale={scaleAxisLeft}\n          numTicks={3}\n          hideTicks={true}\n          stroke={axisColor}\n          tickStroke={axisColor}\n          tickLabelProps={() => axisLeftTickLabelProps}\n          tickFormat={(e) => `${e} ${uom}`}\n        />\n      </svg>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport classnames from \"classnames\";\nimport \"./Card.scss\";\n\ninterface Props {\n  className?: string;\n}\n\nexport const Card: FunctionComponent<Props> = ({ children, className }) => {\n  const classes = classnames(`card-elem`, className);\n  return <div className={classes}>{children}</div>;\n};\n","export const config = {\n  apiUrl: `http://134.209.80.241:3100/`,\n};\n","import moment from \"moment\";\n\nexport const calculateTimeScaleValue = (\n  fromDate: string,\n  toDate: string\n): string => {\n  const timeRecivedDiference =\n    Math.round(moment(toDate).valueOf() / 1000) -\n    Math.round(moment(fromDate).valueOf() / 1000);\n  const threeDaysDiference =\n    moment().valueOf() / 1000 - moment().subtract(3, \"days\").valueOf() / 1000;\n  const threeMonthsDiference =\n    moment().valueOf() / 1000 - moment().subtract(3, \"months\").valueOf() / 1000;\n  const sevenMonthsDiference =\n    moment().valueOf() / 1000 - moment().subtract(7, \"months\").valueOf() / 1000;\n  if (timeRecivedDiference < threeDaysDiference) return \"1h\";\n  else if (\n    timeRecivedDiference > threeDaysDiference &&\n    timeRecivedDiference < threeMonthsDiference\n  )\n    return \"1d\";\n  else if (\n    timeRecivedDiference > threeMonthsDiference &&\n    timeRecivedDiference < sevenMonthsDiference\n  )\n    return \"1w\";\n  else return \"4w\";\n};\n","import axios from \"axios\";\nimport { config } from \"../../config\";\nimport { ApiResponse } from \"../../types/api\";\nimport moment from \"moment\";\nimport { ApiServiceDataProp } from \"./ApiServiceDataProp\";\nimport { calculateTimeScaleValue } from \"./calculateTimeScaleValue\";\n\nexport class ApiService {\n  static user: string;\n  static async makeGetRequest(\n    endpoint: string,\n    user?: string,\n    fromDate?: number,\n    toDate?: number,\n    timeScaleValue?: string,\n    dataValue?: string\n  ) {\n    return axios({\n      method: \"get\",\n      url: config.apiUrl + endpoint,\n\n      params: {\n        fromDate: fromDate,\n        toDate: toDate,\n        user: user,\n        aggregateTimeScale: timeScaleValue,\n        dataToGet: dataValue,\n      },\n    }).then((response) => {\n      return response.data;\n    });\n  }\n\n  static async getPeriodData(\n    fromDate: string,\n    toDate: string,\n    selectedDevice: string,\n    dataValue: ApiServiceDataProp\n  ): Promise<ApiResponse[]> {\n    const fromDateTs = Math.round(moment(fromDate).valueOf() / 1000);\n    const toDateTs = Math.round(moment(toDate).valueOf() / 1000);\n    const timeScaleValue = calculateTimeScaleValue(fromDate, toDate);\n    return ApiService.makeGetRequest(\n      \"data/period\",\n      selectedDevice,\n      fromDateTs,\n      toDateTs,\n      timeScaleValue,\n      dataValue\n    );\n    //return Promise.resolve(historicalValues);\n  }\n  static async getUsersList(): Promise<Array<string>> {\n    return ApiService.makeGetRequest(\"users\");\n    // return Promise.resolve(['@erguro1973', 'Andreas_IBZ', '@Andreas_IBZ']);\n  }\n\n  static async getCurrentData(\n    selectedDevice: string,\n    dataValue: string\n  ): Promise<ApiResponse[]> {\n    return ApiService.makeGetRequest(\n      \"data/current\",\n      selectedDevice,\n      undefined,\n      undefined,\n      undefined,\n      dataValue\n    );\n    //return Promise.resolve({value: 29, time: \"1587726000000\"});\n  }\n}\n","export enum ApiServiceDataProp {\n  co2 = `co2`,\n  temperature = `temperature`,\n  humidity = `humidity`,\n}\n","import React, { FunctionComponent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./LateralBar.scss\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  devices: string[];\n  activeDevice: string;\n  onClickOnClose: () => void;\n  onClickOnDevice: (device: string) => void;\n}\n\nexport const LateralBar: FunctionComponent<Props> = ({\n  onClickOnClose,\n  onClickOnDevice,\n  devices,\n  activeDevice,\n}) => {\n  return (\n    <div className=\"side-menu dark\">\n      <div className=\"row top d-flex p-3 pl-4 justify-content-between align-items-center text-center\">\n        <p className=\"col ml-5 mt-4 font-weight-bold\">CODOS APP</p>\n        <div className=\"close-button border-0 mr-4\" onClick={onClickOnClose}>\n          <FontAwesomeIcon icon={faTimesCircle} size=\"lg\" />\n        </div>\n      </div>\n\n      <div className=\"row menu my-5 ml-5 d-flex flex-column \">\n        <p className=\"font-weight-bold pb-4 h5\">Listado de dispositivos</p>\n        <ul className=\"list-unstyled\">\n          {devices.map((device) => (\n            <li\n              key={device}\n              className={`border-0 my-2 px-0 ${\n                device === activeDevice && \"menu-button-actived\"\n              } menu-button`}\n              onClick={() => onClickOnDevice(device)}\n            >\n              {device}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <hr className=\"ml-5 text-left font-weight-bold\" />\n\n      <div className=\"row about ml-5 mt-5 font-weight-bold\">\n        <Link to=\"/about\" className=\"about-link\">\n          About\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./LateralMenuTransition.scss\";\n\ninterface Props {\n  children: JSX.Element;\n  isVisible: boolean;\n}\n\nexport const LateralMenuTransition: FunctionComponent<Props> = ({\n  children,\n  isVisible,\n}) => {\n  return (\n    <>\n      <CSSTransition\n        in={isVisible}\n        timeout={1000}\n        classNames=\"lateral\"\n        unmountOnExit\n      >\n        {children}\n      </CSSTransition>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useStateWithLocalStorage = (\n  localStorageKey: string\n): [string, (state: string) => void] => {\n  const [value, setValue] = useState(\n    localStorage.getItem(localStorageKey) || \"\"\n  );\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, value);\n  }, [value, localStorageKey]);\n\n  return [value, setValue];\n};\n","export enum MainGraphConfig {\n  endTimeValue = 8,\n  marginY = 20,\n  marginX = 60,\n  bottomAxisNumTicks = 7,\n  height = 160,\n}\n","export enum LoadingColors {\n  white = \"loading-white\",\n  darkGrey = \"loading-dark\",\n}\n","import React, { FunctionComponent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Loading.scss\";\n\ninterface Props {\n  color: string;\n}\n\nexport const Loading: FunctionComponent<Props> = ({ color }) => {\n  return (\n    <div className={`text-center loading py-5 ${color}`}>\n      <FontAwesomeIcon icon={faSpinner} size=\"lg\" />\n    </div>\n  );\n};\n","export const initialState = {\n  ismenuActived: false,\n  currentCo2: 0,\n  currentTemperature: 0,\n  currentHumidity: 0,\n  co2Data: [],\n  deviceList: [],\n  isError: false,\n  isLoading: false,\n};\n\nexport enum IAction {\n  setMenuActived = \"setMenuActived\",\n  setCurrentCo2 = \"setCurrentCo2\",\n  setCurrentTemperature = \"setCurrentTemperature\",\n  setCurrentHumidity = \"setCurrentHumidity\",\n  setCo2Data = \"setCo2Data\",\n  setDeviceList = \"setDeviceList\",\n  setIsError = \"setIsError\",\n  setIsLoading = \"setIsLoading\",\n}\n\nexport const reducer = (\n  state: any,\n  { type, value }: { type: string; value: any }\n) => {\n  switch (type) {\n    case IAction.setMenuActived:\n      return { ...state, isMenuActived: value };\n    case IAction.setCurrentCo2:\n      return { ...state, currentCo2: value };\n    case IAction.setCurrentTemperature:\n      return { ...state, currentTemperature: value };\n    case IAction.setCurrentHumidity:\n      return { ...state, currentHumidity: value };\n    case IAction.setCo2Data:\n      return { ...state, co2Data: value };\n    case IAction.setDeviceList:\n      return { ...state, deviceList: value };\n    case IAction.setIsError:\n      return { ...state, isError: value };\n    case IAction.setIsLoading:\n      return { ...state, isLoading: value };\n  }\n};\n","export enum HistoryGraphConfig {\n  endTimeValue = 10,\n  marginY = 20,\n  marginX = 55,\n  bottomAxisNumTicks = 5,\n  height = 118,\n}\n","import React, { useCallback, useEffect, useReducer } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { CurrentCo2 } from \"../../components/CurrentCo2/CurrentCo2\";\nimport { IconWithValue } from \"../../components/IconWithValue/IconWithValue\";\nimport { Icon } from \"../../components/IconWithValue/Icon\";\nimport ParentSize from \"@visx/responsive/lib/components/ParentSize\";\nimport { TimeWithValuesGraph } from \"../../components/TimeWithValuesGraph/TimeWithValuesGraph\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Card } from \"../../components/Card/Card\";\nimport \"./Main.scss\";\nimport { ApiService } from \"../../services/ApiService/ApiService\";\nimport { ApiResponse } from \"../../types/api\";\nimport { LateralBar } from \"../../components/LateralBar/LateralBar\";\nimport { LateralMenuTransition } from \"../../components/LateralMenuTransition/LateralMenuTransition\";\nimport { useStateWithLocalStorage } from \"../../hooks/useStateWithLocalStorage\";\nimport moment from \"moment\";\nimport { ApiServiceDataProp } from \"../../services/ApiService/ApiServiceDataProp\";\nimport { Loading } from \"../../components/Loading/Loading\";\nimport { MainGraphConfig } from \"./MainGraphConfig\";\nimport { LoadingColors } from \"../../components/Loading/LoadingColors\";\nimport { reducer, IAction, initialState } from \"./State\";\n\nconst hours = 8;\n\nconst Main = () => {\n  const [selectedDevice, setSelectedDevice] = useStateWithLocalStorage(\n    \"deviceSelected\"\n  );\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    ApiService.getUsersList().then((apiResponse: string[]) => {\n      dispatch({ type: IAction.setDeviceList, value: apiResponse });\n    });\n  }, []);\n\n  useEffect(() => {\n    const fromDate = moment().subtract(7, \"hour\").format(`YYYY-MM-DD HH:mm`);\n    const toDate = moment().format(`YYYY-MM-DD HH:mm`);\n    if (selectedDevice) {\n      const currentCo2 = ApiService.getCurrentData(\n        selectedDevice,\n        ApiServiceDataProp.co2\n      );\n      const currentTemperature = ApiService.getCurrentData(\n        selectedDevice,\n        ApiServiceDataProp.temperature\n      );\n      const currentHumidity = ApiService.getCurrentData(\n        selectedDevice,\n        ApiServiceDataProp.humidity\n      );\n      const periodCo2 = ApiService.getPeriodData(\n        fromDate,\n        toDate,\n        selectedDevice,\n        ApiServiceDataProp.co2\n      );\n      Promise.all([currentCo2, currentTemperature, currentHumidity, periodCo2])\n        .then(\n          ([\n            currentCo2Response,\n            currentTemperatureResponse,\n            currentHumidityResponse,\n            periodCo2Response,\n          ]: ApiResponse[][]) => {\n            dispatch({ type: IAction.setIsLoading, value: false });\n            dispatch({\n              type: IAction.setCurrentCo2,\n              value: currentCo2Response[0].value,\n            });\n            dispatch({\n              type: IAction.setCurrentTemperature,\n              value: currentTemperatureResponse[0].value,\n            });\n            dispatch({\n              type: IAction.setCurrentHumidity,\n              value: currentHumidityResponse[0].value,\n            });\n            dispatch({ type: IAction.setCo2Data, value: periodCo2Response });\n          }\n        )\n        .catch(() => dispatch({ type: IAction.setIsError, value: true }));\n    }\n  }, [selectedDevice]);\n\n  const onClickOnDevice = useCallback(\n    (device: string) => {\n      setSelectedDevice(device);\n      dispatch({ type: IAction.setMenuActived, value: false });\n    },\n    [setSelectedDevice]\n  );\n\n  if (state.isError) {\n    return <Redirect to=\"/unexpected-error?redirectTo=/\" />;\n  }\n\n  if (state.isLoading && selectedDevice) {\n    return (\n      <div className=\"container is-loading-container\">\n        <div className=\"row\">\n          <div className=\"col is-loading\">\n            <Loading color={LoadingColors.darkGrey}></Loading>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"main\">\n      <div className=\"container\">\n        <LateralMenuTransition isVisible={state.isMenuActived}>\n          <LateralBar\n            activeDevice={selectedDevice}\n            devices={state.deviceList}\n            onClickOnClose={() =>\n              dispatch({ type: IAction.setMenuActived, value: false })\n            }\n            onClickOnDevice={onClickOnDevice}\n          />\n        </LateralMenuTransition>\n        <div className=\"row\">\n          <div className=\"col ml-4 pt-4 mt-3 h4 mb-0 d-inline menu-elem\">\n            <p\n              className=\"mb-0 d-inline\"\n              onClick={() =>\n                dispatch({ type: IAction.setMenuActived, value: true })\n              }\n            >\n              <FontAwesomeIcon icon={faBars} size=\"lg\" />\n            </p>\n          </div>\n        </div>\n      </div>\n      {!selectedDevice && (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col px-5 py-3 pt-5 mt-3\">\n              <h4 className=\"select-a-device\">\n                Acceda al menú lateral y seleccione un dispositivo\n              </h4>\n            </div>\n          </div>\n        </div>\n      )}\n      {selectedDevice && (\n        <>\n          <CurrentCo2 eCoValue={Math.round(state.currentCo2)} />\n          <div className=\"container px-5 text-center\">\n            <Card>\n              <div className=\"row icon-with-value-elem\">\n                <div className=\"col\">\n                  <IconWithValue\n                    value={`${Math.round(state.currentTemperature)}º`}\n                    icon={Icon.thermometer}\n                  />\n                </div>\n                <div className=\"col\">\n                  <IconWithValue\n                    value={`${Math.round(state.currentHumidity)}%`}\n                    icon={Icon.humidity}\n                  />\n                </div>\n              </div>\n            </Card>\n          </div>\n          <div className=\"container px-5 pt-3 mt-4 mb-4 pb-2\">\n            <Card className=\"graph-elem\">\n              <p className=\"text-elem pt-3 pl-2 mb-3\">Últimas {hours} horas</p>\n              <div className=\"row\">\n                <div className=\"col text-center\">\n                  <ParentSize className=\"graph-elem\">\n                    {({ width }) => (\n                      <TimeWithValuesGraph\n                        endTimeValue={MainGraphConfig.endTimeValue}\n                        uom={\"ppm\"}\n                        timeFormat={\"H:mm\"}\n                        marginY={MainGraphConfig.marginY}\n                        marginX={MainGraphConfig.marginX}\n                        historicalValues={state.co2Data}\n                        bottomAxisNumTicks={MainGraphConfig.bottomAxisNumTicks}\n                        width={width}\n                        height={MainGraphConfig.height}\n                      />\n                    )}\n                  </ParentSize>\n                </div>\n              </div>\n            </Card>\n          </div>\n          <div className=\"container pt-1 pb-5\">\n            <div className=\"text-center m-auto rounded-circle search-elem\">\n              <Link to=\"/history\" className=\"search-link\">\n                <FontAwesomeIcon icon={faSearch} size=\"lg\" />\n              </Link>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { FunctionComponent, useMemo } from \"react\";\nimport \"./DatePicker.scss\";\nimport shortid from \"shortid\";\n\ninterface Props {\n  text: string;\n  date?: string;\n  onDateChanged: (value: string) => void;\n}\n\nexport const DatePicker: FunctionComponent<Props> = ({\n  text,\n  date,\n  onDateChanged,\n}) => {\n  const idValue = useMemo(() => shortid.generate(), []);\n  return (\n    <>\n      <label className=\"pt-2 date-picker-text\" htmlFor={idValue}>\n        {text}:\n      </label>\n      <input\n        value={date}\n        className=\"date-picker-input\"\n        onChange={({ target }) => onDateChanged(target.value)}\n        name={text}\n        type=\"date\"\n        id={idValue}\n      />\n    </>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport \"./CardWithTextTab.scss\";\n\ninterface Props {\n  value: string;\n}\n\nexport const CardWithTextTab: FunctionComponent<Props> = ({\n  value,\n  children,\n}) => {\n  return (\n    <div className=\"py-4 mx-2\">\n      <div className=\"card-tab inline d-inline-block px-3 py-1 text-center\">\n        {value}\n      </div>\n      <div className=\"card-with-text-tab\">{children}</div>\n    </div>\n  );\n};\n","import { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { FunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./GreyScreenWithTitleLayout.scss\";\n\ninterface Props {\n  title: string;\n  children: JSX.Element;\n}\n\nexport const GreyScreenWithTitleLayout: FunctionComponent<Props> = ({\n  title,\n  children,\n}) => {\n  return (\n    <div className=\"grey-background\">\n      <div className=\"grey-layout__container container\">\n        <div className=\"row\">\n          <Link\n            to=\"/\"\n            className=\"ml-4 mt-4 rounded-circle grey-layout__arrow-back-elem\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} size=\"lg\" />\n          </Link>\n        </div>\n        <div className=\"row\">\n          <h1 className=\"text-center grey-layout__text-elem\">{title}</h1>\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ParentSize from \"@visx/responsive/lib/components/ParentSize\";\nimport { DatePicker } from \"../../components/DatePicker/DatePicker\";\nimport { TimeWithValuesGraph } from \"../../components/TimeWithValuesGraph/TimeWithValuesGraph\";\nimport { CardWithTextTab } from \"../../components/CardWithTextTab/CardWithTextTab\";\nimport \"./History.scss\";\nimport { ApiService } from \"../../services/ApiService/ApiService\";\nimport { ApiResponse } from \"../../types/api\";\nimport { useStateWithLocalStorage } from \"../../hooks/useStateWithLocalStorage\";\nimport { ApiServiceDataProp } from \"../../services/ApiService/ApiServiceDataProp\";\nimport { Loading } from \"../../components/Loading/Loading\";\nimport { GreyScreenWithTitleLayout } from \"../../components/GreyScreenWithTitleLayout/GreyScreenWithTitleLayout\";\nimport { HistoryGraphConfig } from \"./HistoryGraphConfig\";\nimport { LoadingColors } from \"../../components/Loading/LoadingColors\";\n\nconst History = () => {\n  const [fromDate, setFromDate] = useState<string>(\"\");\n  const [toDate, setToDate] = useState<string>(\"\");\n  const [co2Data, setCo2Data] = useState<ApiResponse[]>();\n  const [temperatureData, setTemperatureData] = useState<ApiResponse[]>();\n  const [humidityData, setHumidityData] = useState<ApiResponse[]>();\n  const [selectedDevice] = useStateWithLocalStorage(\"deviceSelected\");\n  const [timeScaleValue, setTimeScaleValue] = useState<string>();\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const refetchData = () => {\n    setCo2Data(undefined);\n    setTemperatureData(undefined);\n    setHumidityData(undefined);\n    setIsLoading(true);\n    setTimeScaleValue(timeScaleValue);\n    const periodCo2 = ApiService.getPeriodData(\n      fromDate,\n      toDate,\n      selectedDevice,\n      ApiServiceDataProp.co2\n    );\n    const periodTemperature = ApiService.getPeriodData(\n      fromDate,\n      toDate,\n      selectedDevice,\n      ApiServiceDataProp.temperature\n    );\n    const periodHumidity = ApiService.getPeriodData(\n      fromDate,\n      toDate,\n      selectedDevice,\n      ApiServiceDataProp.humidity\n    );\n    Promise.all([periodCo2, periodTemperature, periodHumidity])\n      .then(([co2, temperature, humidity]: ApiResponse[][]) => {\n        setIsLoading(false);\n        setCo2Data(co2);\n        setTemperatureData(temperature);\n        setHumidityData(humidity);\n      })\n      .catch(() => setIsError(true));\n  };\n\n  if (isError) {\n    return <Redirect to=\"/unexpected-error?redirectTo=history\" />;\n  }\n\n  return (\n    <GreyScreenWithTitleLayout title=\"Histórico\">\n      <div className=\"history dark\">\n        <div className=\"row date-range-pickers-container pt-3 mt-3\">\n          <div className=\"col mx-3 my-3\">\n            <DatePicker\n              date={fromDate}\n              onDateChanged={(value: string) => setFromDate(value)}\n              text=\"Desde\"\n            />\n            <DatePicker\n              date={toDate}\n              onDateChanged={(value: string) => setToDate(value)}\n              text=\"Hasta\"\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col pl-5 my-3\">\n            <button\n              className=\"search-button btn\"\n              disabled={!fromDate || !toDate || fromDate === toDate}\n              onClick={refetchData}\n            >\n              Buscar{\" \"}\n            </button>\n          </div>\n        </div>\n\n        {fromDate === toDate && fromDate !== \"\" && (\n          <p className=\"row px-5 pt-5 invalid-dates\">\n            Por favor, seleccione un periodo mayor entre fechas.\n          </p>\n        )}\n\n        {isLoading && <Loading color={LoadingColors.white} />}\n        {temperatureData && humidityData && co2Data && (\n          <>\n            <CardWithTextTab value=\"eCO²\">\n              <div className=\"row\">\n                <ParentSize className=\"history-graph-elem\">\n                  {({ width }) => (\n                    <TimeWithValuesGraph\n                      endTimeValue={HistoryGraphConfig.endTimeValue}\n                      uom={\"ppm\"}\n                      timeFormat={timeScaleValue === \"1h\" ? \"H:mm\" : \"DD-MM\"}\n                      marginY={HistoryGraphConfig.marginY}\n                      marginX={HistoryGraphConfig.marginX}\n                      historicalValues={co2Data}\n                      bottomAxisNumTicks={HistoryGraphConfig.bottomAxisNumTicks}\n                      width={width}\n                      height={HistoryGraphConfig.height}\n                    />\n                  )}\n                </ParentSize>\n              </div>\n            </CardWithTextTab>\n            <CardWithTextTab value=\"Temp.\">\n              <div className=\"row\">\n                <ParentSize className=\"history-graph-elem\">\n                  {({ width }) => (\n                    <TimeWithValuesGraph\n                      endTimeValue={HistoryGraphConfig.endTimeValue}\n                      uom={\"ºC\"}\n                      timeFormat={timeScaleValue === \"1h\" ? \"H:mm\" : \"DD-MM\"}\n                      marginY={HistoryGraphConfig.marginY}\n                      marginX={HistoryGraphConfig.marginX}\n                      historicalValues={temperatureData}\n                      bottomAxisNumTicks={HistoryGraphConfig.bottomAxisNumTicks}\n                      width={width}\n                      height={HistoryGraphConfig.height}\n                    />\n                  )}\n                </ParentSize>\n              </div>\n            </CardWithTextTab>\n            <CardWithTextTab value=\"Humidity\">\n              <div className=\"row\">\n                <ParentSize className=\"history-graph-elem\">\n                  {({ width }) => (\n                    <TimeWithValuesGraph\n                      endTimeValue={HistoryGraphConfig.endTimeValue}\n                      uom={\"%\"}\n                      timeFormat={timeScaleValue === \"1h\" ? \"H:mm\" : \"DD-MM\"}\n                      marginY={HistoryGraphConfig.marginY}\n                      marginX={HistoryGraphConfig.marginX}\n                      historicalValues={humidityData}\n                      bottomAxisNumTicks={HistoryGraphConfig.bottomAxisNumTicks}\n                      width={width}\n                      height={HistoryGraphConfig.height}\n                    />\n                  )}\n                </ParentSize>\n              </div>\n            </CardWithTextTab>\n          </>\n        )}\n      </div>\n    </GreyScreenWithTitleLayout>\n  );\n};\n\nexport default History;\n","export default __webpack_public_path__ + \"static/media/unexpected-error.49148320.png\";","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport robotImg from \"../../img/unexpected-error.png\";\nimport { parse } from \"query-string\";\nimport \"./UnexpectedError.scss\";\n\nconst UnexpectedError = () => {\n  const location = useLocation();\n\n  const { redirectTo } = parse(location.search);\n\n  return (\n    <div className=\"container pt-5 parent-unexcected-error\">\n      <div className=\"unexpected-error\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"m-auto unexpected-error__text\">\n              <p className=\"font-weight-bold h5 py-3\">¡Vaya!</p>\n              <p className=\"unexpected-error__down-text\">\n                Algo no fue como esperábamos\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col px-5 unexpected-error__robot-img\">\n            <img src={robotImg} alt=\"robot\" />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col text-center m-5\">\n            <button className=\"btn mt-3 py-2 px-5 font-weight-bold unexpected-error__button\">\n              <Link to={(redirectTo as string) || \"/\"} className=\"search-link\">\n                Volver\n              </Link>{\" \"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default UnexpectedError;\n","import { FunctionComponent, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\ninterface Props {\n  children: JSX.Element;\n}\n\nexport const ScrollToTop: FunctionComponent<Props> = ({ children }) => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return children;\n};\n","import React from \"react\";\nimport { GreyScreenWithTitleLayout } from \"../../components/GreyScreenWithTitleLayout/GreyScreenWithTitleLayout\";\nimport \"./About.scss\";\nimport Package from \"../../../package.json\";\n\nexport const About = () => {\n  return (\n    <GreyScreenWithTitleLayout title=\"Información\">\n      <div className=\"about dark\">\n        <div className=\"row mx-5 pt-5 mt-3\">\n          <p className=\"about__header mb-1\">Proyecto de:</p>\n          <ul className=\"list-unstyled mt-0\">\n            <li>\n              <a\n                className=\"about__anchor\"\n                href=\"https://mallorcaboot.camp/\"\n                rel=\"noreferrer\"\n                target=\"_blank\"\n              >\n                Mallorca Bootcamp\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"row mx-5 pt-3\">\n          <p className=\"about__header mb-1\">Desarrollado por:</p>\n          <ul className=\"list-unstyled\">\n            <li>\n              <a\n                className=\"about__anchor\"\n                href=\"https://github.com/Ralvgar\"\n                rel=\"noreferrer\"\n                target=\"_blank\"\n              >\n                Roberto Álvarez García\n              </a>\n            </li>\n            <li>\n              <a\n                className=\"about__anchor\"\n                href=\"https://github.com/JosemiChaves9\"\n                rel=\"noreferrer\"\n                target=\"_blank\"\n              >\n                Jose Miguel Chaves Ojeda\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"row mx-5 pt-3\">\n          <p className=\"about__header mb-1\">Diseño de interfaz:</p>\n          <ul className=\"list-unstyled\">\n            <li>\n              <a\n                className=\"about__anchor\"\n                href=\"https://www.behance.net/lorenavicente\"\n                rel=\"noreferrer\"\n                target=\"_blank\"\n              >\n                Lorena Vicente Díaz\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"row mx-5 pt-3\">\n          <p className=\"about__header mb-1\">Ilustración página de error:</p>\n          <ul className=\"list-unstyled\">\n            <li>\n              <a\n                className=\"about__anchor\"\n                href=\"https://stories.freepik.com/web\"\n                rel=\"noreferrer\"\n                target=\"_blank\"\n              >\n                Freepik Stories\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"row mx-5 pt-3\">\n          <p className=\"about__header mb-1\">Versión:</p>\n          <ul className=\"list-unstyled\">\n            <li>{Package.version}</li>\n          </ul>\n        </div>\n      </div>\n    </GreyScreenWithTitleLayout>\n  );\n};\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Main from \"./screens/Main/Main\";\nimport History from \"./screens/History/History\";\nimport UnexpectedError from \"./screens/UnexpectedError/UnexpectedError\";\nimport { ScrollToTop } from \"./components/ScrollToTop/ScrollToTop\";\nimport \"./styles/index.scss\";\nimport { About } from \"./screens/About/About\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/history\">\n          <ScrollToTop>\n            <History />\n          </ScrollToTop>\n        </Route>\n        <Route path={\"/\"} exact>\n          <ScrollToTop>\n            <Main />\n          </ScrollToTop>\n        </Route>\n        <Route path=\"/unexpected-error\" component={UnexpectedError} />\n        <Route path=\"/about\" component={About} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}